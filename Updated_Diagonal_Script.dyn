{
  "Uuid": "ccb73877-ef44-4fb8-8bf7-899a9f478484",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Updated_Diagonal_Script",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 25,
      "MaximumValue": 60,
      "MinimumValue": 20,
      "StepValue": 5,
      "Id": "ef2168aad5004db0a098adba42ccfeb5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57a773fc8da24a78be1f36ab38b5554d",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 20,
      "MaximumValue": 40,
      "MinimumValue": 10,
      "StepValue": 5,
      "Id": "8d2bf597c805461ca63d2772eac2790a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0e050ea3a03d49e6b2bca5a90f0f2bf4",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2,
      "MaximumValue": 4,
      "MinimumValue": 2,
      "StepValue": 1,
      "Id": "65c332a7b7304370a800b1f45400da03",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "21977fcf52c4488a8c86b162ac5e84a5",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 6,
      "MaximumValue": 15,
      "MinimumValue": 2,
      "StepValue": 1,
      "Id": "77b65c47486b4b969a0691ef975fd91a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b342a625dda4df3b3c26de36d99add9",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "49e6e351fbc246d6a437951ad5557c86",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "71b3ed6b2bb44c8391192a164c9b036d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.915,
      "Id": "5fc45f30ae92438cb211e84f4439c0d7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4e20251951b48cba71eab0b1773658f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.8,
      "Id": "fad7c277ca8547e59ed811f532d1a1e5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f59c9f9092954ba49afb8343d061fb0a",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "## @brief Preprocesses dynamo script's input parameters\r\n# Takes user input (left side) as input and splits it into pre-refactoring and post-refactoring user parameters\r\n# @In array of user input parameters\r\n# @OUT Tuple of \r\n# A text file's name containing all pre-refactoring user parameters as part of the name\r\n# List of all the pre-refactoring user parameters in their original type\r\n# List of all the post-refactoring user parameters in their original type\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Constants...\r\nPRE_FACTORING_INPUT_LENGTH = 6\r\nBOTTLENECK_INDEX = 5\r\n\r\n## 4th index left empty to be consistent with pre-refactoring file name\r\nINPUT_NAMES = [\r\n    \"siteX\" , \"siteY\" , \"CORRWIDTH\" , \"NUMROOMS\" , \"\" , \"INCBNECK\"\r\n]\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Helper functions...\r\n\r\n## Converts a string to an integer\r\n# @param int_as_string:str string to be converted\r\n# @returns argument converted to an integer\r\n# @raises ValueError\r\ndef convert_to_int(int_as_string) : \r\n    try : \r\n        return int(int_as_string)\r\n    except : \r\n        raise ValueError(f\"{int_as_string} cannot be converted to integer\")\r\n\r\n## Converts str to boolean : \r\n# @param bool_as_string:str string to be converted\r\n# @returns argument converted to a boolean\r\n# @note converted to integer first to counter edge case: \"0\" is casted to True\r\n# @raises ValueError\r\ndef convert_to_bool(bool_as_string) : \r\n    try : \r\n        return bool(convert_to_int(bool_as_string))\r\n    except ValueError as e : \r\n        if \"False\" in str(e) or \"True\" in str(e) : return bool(bool_as_string)\r\n        else : raise ValueError(\"Argument string cannot be converted to boolean\")\r\n    \r\n## Converts str to float : \r\n# @param float_as_string:str string to be converted\r\n# @returns argument converted to a float\r\n# @raises ValueError\r\ndef convert_to_float(float_as_string) : \r\n    try : \r\n        return float(float_as_string)\r\n    except : \r\n        raise ValueError(\"Argument string cannot be converted to float\")\r\n    \r\n## Converts user input from string to original types\r\n# Splits input parameters to pre-refactoring (first 6 inputs) and post-refactoring (additional_input_as_string; remaining inputs) user parameters\r\n# @uses convert_to_int(), convert_to_bool() , convert_to_float()\r\n# @param input_as_string:list<string> list of inputs to be converted\r\n# @param include_bottleneck_index<int> index of INCLUDE_BOTTLENECK, the only user input of type: bool\r\n# @returns list of pre-factoring user input in original types, list of post-refactoring user input in original types\r\n# @note refer to start of dynamo script for original types\r\n# @raises IndexError\r\ndef convert_input_from_string(input_as_string , include_bottleneck_index) : \r\n    pre_refactoring_input_as_string , additional_input_as_string = input_as_string[: PRE_FACTORING_INPUT_LENGTH] , input_as_string[PRE_FACTORING_INPUT_LENGTH :]\r\n\r\n    if include_bottleneck_index > (len(pre_refactoring_input_as_string) - 1) : \r\n        raise IndexError(\"include_bootleneck_index is out of bounds\")\r\n    \r\n    return [\r\n        convert_to_int(user_input) if u != include_bottleneck_index else convert_to_bool(user_input) for u, user_input in enumerate(pre_refactoring_input_as_string) \r\n    ] , [\r\n        convert_to_float(user_input) for user_input in additional_input_as_string\r\n    ]\r\n\r\n## Generates name of the text file from user input parameters\r\n# Adds pairs of names and parameters to a string and then returns string\r\n# @param user_input:list values of input parameters to be included in file name\r\n# @param input_names:list<str> names of input parameters to be included in file name\r\n# @returns filename:str final filename\r\n# @raises ValueError\r\ndef generate_file_name(user_input , input_names) : \r\n    if len(user_input) != len(input_names) : \r\n        raise ValueError(\"Unequal list lengths\")\r\n\r\n    file_name = \"floorplan\"\r\n\r\n    for i in range(len(user_input)) :\r\n        input_as_string = user_input[i]\r\n        name_input_pair_as_string = f\"_{input_names[i]}_{input_as_string}\" if i != 4 else f\"_{input_as_string}\"\r\n        file_name += name_input_pair_as_string\r\n\r\n    file_name += \".txt\"\r\n\r\n    return file_name\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Script...\r\npre_factoring_user_input , additional_user_input = convert_input_from_string(IN , BOTTLENECK_INDEX)\r\n\r\nOUT = generate_file_name(pre_factoring_user_input , INPUT_NAMES) , pre_factoring_user_input , additional_user_input",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c614db2c9b21443f815195f46e7e4358",
      "Inputs": [
        {
          "Id": "c4d399a3404c4c42966b9e99d874cb1b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f46f43c36d19488c805c98ee55fceda1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3ecbd099ff942bfa29e7afe9bdf4a4d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df084057c9e24b7f80480255772d0ccf",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31837d4788064fae94d12e6a1018745c",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f54d0329fb0545cab4d6c9a559bde2e1",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c08edd06b553430a8678f1378ee2b707",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5bbfda944f954ca7a19421fa17250212",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56c29046eb3b4a8c8a7c573c1329a27f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 15.0,
      "MinimumValue": 2.0,
      "StepValue": 1.0,
      "InputValue": 2.0,
      "Id": "3c0bb1e27b974e12ae5e1808100f770c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8dbb6de9e00b4a459ef8bea0657d1335",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "DSRevitNodesUI.WallTypes, DSRevitNodesUI",
      "SelectedIndex": 15,
      "SelectedString": "Generic - 200mm",
      "NodeType": "ExtensionNode",
      "Id": "fedaeeaf3e29475e8d7081c0de5c1165",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66d37cad1d2443dda396713db9b0b3cb",
          "Name": "Wall Type",
          "Description": "The selected Wall Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All wall types available in the document."
    },
    {
      "ConcreteType": "DSRevitNodesUI.WallTypes, DSRevitNodesUI",
      "SelectedIndex": 18,
      "SelectedString": "Generic - 300mm",
      "NodeType": "ExtensionNode",
      "Id": "3bacfb05095e4bfe8714510c7b26fed7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae0cf6cafcc6406cb717ae4ccc415e52",
          "Name": "Wall Type",
          "Description": "The selected Wall Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All wall types available in the document."
    },
    {
      "ConcreteType": "DSRevitNodesUI.FloorTypes, DSRevitNodesUI",
      "SelectedIndex": 5,
      "SelectedString": "Generic 300mm",
      "NodeType": "ExtensionNode",
      "Id": "1183b433f321498988973f9514f8798c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5366f32cc9e84c7585cba56bcba2278a",
          "Name": "Floor Type",
          "Description": "The selected Floor Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All floor types available in the document."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "32fecd23e28e4038af64c742d9280202",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6366b875e894424e9089f7965fac2894",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\Work\\TUM_Research\\HiWiPatrick\\PedSimAutomation\\No file selected",
      "InputValue": "No file selected.",
      "NodeType": "ExtensionNode",
      "Id": "ab519910f7d44ca7acbe1d0a049b734e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b8fa9382ed3c4b3c8d4d56d88c3fc639",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "corr_e2e",
      "Id": "15ae43c2e5754d459090ff7f660695e9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68fe2ff24ee646d0b2b23baa41df47d0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "08d56833effd41699d17b1f9eac93c6d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "45e93c31d4434ec1b103cb5f7b590392",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "42e933ab5a9e45a481e1a7d936f8ec0d",
      "Inputs": [
        {
          "Id": "4e0ae67c95fa4b3c8f4920c68376f10a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa5e2172da6841089898fbac616b410d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08d900322d234f5195644f0c3cf78a83",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69fec162dfe64c5da3613e8d6c0dbbd8",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4d937c27a044eb3896cfc1938c98388",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b37a468fee85491480f983d3c516a350",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\n\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager \r\nfrom RevitServices.Transactions import TransactionManager \r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitAPIUI\")\r\n\r\nclr.AddReference('ProtoGeometry')\r\nimport Autodesk \r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.Revit.DB import *\r\n#from Autodesk.Revit.UI import *\r\nfrom Autodesk.Revit.DB.Architecture import *\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Helper functions...\r\n\r\n## Converts a string to an integer\r\n# @param int_as_string:str string to be converted\r\n# @returns argument converted to an integer\r\n# @raises ValueError\r\ndef convert_to_int(int_as_string) : \r\n    try : \r\n        return int(int_as_string)\r\n    except : \r\n        raise ValueError(f\"{int_as_string} cannot be converted to integer\")\r\n\r\n## Converts str to boolean : \r\n# @param bool_as_string:str string to be converted\r\n# @returns argument converted to a boolean\r\n# @note converted to integer first to counter edge case: \"0\" is casted to True\r\n# @raises ValueError\r\ndef convert_to_bool(bool_as_string) : \r\n    try : \r\n        return bool(convert_to_int(bool_as_string))\r\n    except ValueError as e : \r\n        if \"False\" in str(e) or \"True\" in str(e) : return bool(bool_as_string)\r\n        else : raise ValueError(\"Argument string cannot be converted to boolean\")\r\n\r\n## Converts str to float : \r\n# @param float_as_string:str string to be converted\r\n# @returns argument converted to a float\r\n# @raises ValueError\r\ndef convert_to_float(float_as_string) : \r\n    try : \r\n        return float(float_as_string)\r\n    except : \r\n        raise ValueError(\"Argument string cannot be converted to float\")\r\n\r\n## Converts a value or list of values from meters to Revit units\r\n# Checks if arg is a single value, and converts it to Revit units\r\n# Otherwise, arg is a list and all values are converted in a loop\r\n# @param values_in_meter: list<float> (float) list of values (value) to be converted\r\n# @uses convert_to_float()\r\n# @returns values_in_revit_units: list<float> (float) list of values (value) in Revit units\r\n# @raises ValueError\r\ndef convert_to_revit_units(values_in_meter) : \r\n    if values_in_meter == None : \r\n        raise ValueError(\"Received a null value or list of values.\")\r\n\r\n    if not isinstance(values_in_meter , list) : \r\n        return convert_to_float(UnitUtils.ConvertToInternalUnits(values_in_meter , UnitTypeId.Meters))\r\n    \r\n    return [\r\n        convert_to_float(\r\n            UnitUtils.ConvertToInternalUnits(value, UnitTypeId.Meters)\r\n        ) for value in values_in_meter\r\n    ]\r\n\r\n## Converts a value or list of values from Revit units to meter\r\n# Checks if arg is a single value, and converts it to meter\r\n# Otherwise, arg is a list and all values are converted in a loop\r\n# @param values_in_revit_units: list<float> (float) list of values to be converted\r\n# @uses convert_to_float()\r\n# @returns values_in_meter: list<float> (float) list of values (value) in Revit units\r\n# @raises ValueError\r\ndef convert_to_meter(values_in_revit_units) : \r\n    if values_in_revit_units == None : \r\n        raise ValueError(\"Received a null value or list of values.\")\r\n\r\n    if not isinstance(values_in_revit_units , list) : \r\n        return convert_to_float(\r\n            UnitUtils.ConvertFromInternalUnits(values_in_revit_units, UnitTypeId.Meters)\r\n        )\r\n    \r\n    return [\r\n        convert_to_float(\r\n            UnitUtils.ConvertFromInternalUnits(value, UnitTypeId.Meters)\r\n        ) for value in values_in_revit_units\r\n    ]\r\n\r\n## Create four lines for a given point in 3D space and two index lists (min and max)\r\n# Four possible vertices are stored in a  list and accessed using two index lists (min_indices and max_indices)\r\n# create_bound is only created for convenience\r\n# @param point: list<float> list containing the x, y and z poisitions of a point in space\r\n# @param min_indices: list<int> list of indices of the start vertices of all four perimeter lines\r\n# @param max_indices: list<int> list of indices of the end vertices of all four perimeter lines\r\n# @returns list<Revit.DB.Line> list containing four lines\r\n# @raises ValueError\r\ndef create_lines_from_point_and_indices(point , min_indices , max_indices) : \r\n    if len(point) != 3 :\r\n        raise ValueError(\"Point must be a 3D vector.\")\r\n    \r\n    if len(min_indices) != 4 or len(min_indices) != len(max_indices) :\r\n        raise ValueError(\"Both index lists must be equal in length and the length must be 4.\")\r\n\r\n    create_bound = lambda min_point , max_point : Autodesk.Revit.DB.Line.CreateBound(min_point , max_point)\r\n\r\n    x , y , z = point\r\n    vertices = [\r\n        XYZ(0 , 0 , z) , XYZ(x , 0 , z) , XYZ(0 , y , z) , XYZ(x , y , z)\r\n    ]\r\n\r\n    return [\r\n        create_bound(vertices[min_indices[i]] , vertices[max_indices[i]]) for i in range(len(min_indices))\r\n    ]\r\n\r\n## Create four perimeter lines for a point in space, given its x, y and z position\r\n# @param x: float x-position of point\r\n# @param y: float y-position of point\r\n# @param z: float z-position of point\r\n# @uses create_lines_from_point_and_indices()\r\n# @note min and max index lists are hard coded into function; refer to the description of create_lines_from_point_and_indices() for definitions of min_indices and max_indices\r\n# @returns list<Revit.DB.Line> list containing four perimeter lines\r\ndef create_perimeter_lines(x , y , z) : \r\n    min_indices , max_indices = [0 , 1 , 2 , 3] , [1 , 3 , 2 , 0]\r\n    point = [x , y , z]\r\n\r\n    return create_lines_from_point_and_indices(point , min_indices , max_indices)\r\n\r\n## Create slab geometry for a given x and y position, level and difference in z\r\n# The slab is a CurveArray(), with appended perimeter lines (4 in total)\r\n# @param x: float x-position of point\r\n# @param y: float y-position of point\r\n# @param level: Level Revit level element object\r\n# @param delta_z: float difference in z-position\r\n# @uses create_perimeter_lines()\r\n# @returns slab_geometry: CurveArray CurveArray with four perimeter lines appended to it\r\n# @raises TypeError , ValueError\r\ndef create_slab_geometry_by_level(x , y , delta_z , level) : \r\n    if not isinstance(level, Level):\r\n        raise TypeError(\"Arg level must be a valid Level object\")\r\n    if level == None : \r\n        raise ValueError(\"level is null\")\r\n    \r\n    z = level.Elevation + delta_z\r\n\r\n    lines = create_perimeter_lines(x , y , z)\r\n\r\n    slab_geometry = CurveArray()\r\n    for i in range(len(lines)) : \r\n        slab_geometry.append(lines[i])\r\n    \r\n    return slab_geometry\r\n\r\n## Collects all levels from a Revit Doc\r\n# @param doc: DBDocument Revit Document\r\n# @returns list<Level> List of all levels in a Revit document\r\n# @raises ValueError\r\ndef get_all_levels(doc) : \r\n    if doc == None : \r\n        raise ValueError(\"Empty Revit Doc\")\r\n\r\n    return (FilteredElementCollector(doc)\r\n        .OfCategory(BuiltInCategory.OST_Levels)\r\n        .WhereElementIsNotElementType()\r\n        .ToElements())\r\n\r\n## Delete all elements in a Revit document\r\n# @param doc: DBDocument Revit Document\r\n# @note element categories are hard coded into function\r\n# @returns None\r\n# @raises ValueError\r\ndef clear_model(doc) : \r\n    if doc == None : \r\n        raise ValueError(\"Empty Revit Doc\")\r\n    \r\n    element_categories = [\r\n        BuiltInCategory.OST_Grids , BuiltInCategory.OST_Doors , BuiltInCategory.OST_Floors , BuiltInCategory.OST_Walls , BuiltInCategory.OST_Roofs\r\n    ]\r\n\r\n    for category in element_categories : \r\n        elements = FilteredElementCollector(doc).OfCategory(category).WhereElementIsNotElementType().ToElements()\r\n        for element in elements : \r\n            doc.Delete(element.Id)\r\n\r\n## Check the number of existing levels. \r\n# If there is more than one level in the document, delete all levels except the one at the reference height\r\n# The height is then verified and if it doesn't match ref height, level is deleted and a new level is created.\r\n# @param doc: DBDocument Revit Document\r\n# @param ref_level_z: float Reference height\r\n# @returns ref_level: Level Level located at reference height \r\ndef verify_number_of_levels(doc , ref_level_z) : \r\n    levels = get_all_levels(doc)\r\n\r\n    deleted_levels_counter = 0\r\n    if len(levels) > 1 : \r\n        for level in levels : \r\n            if level.Elevation != ref_level_z : \r\n                doc.Delete(level.Id)\r\n                deleted_levels_counter += 1\r\n\r\n    if len(levels) - deleted_levels_counter == 0 : \r\n        print(\"Warning: Found no level at elevation = ref_level_z\")\r\n\r\n    ref_level = levels[0]\r\n\r\n    if ref_level.Elevation != ref_level_z : \r\n        ref_level_new = Autodesk.Revit.DB.Level.Create(doc, ref_level_z)\r\n        doc.Delete(ref_level.Id)\r\n        ref_level = ref_level_new\r\n    \r\n    ref_level.Name = \"Story Level 0\"\r\n    \r\n    return ref_level\r\n    \r\n## Create bounding box from origin to a point at z = height\r\n# @param height: float height of bounding box\r\n# @returns bounding_box: BoundingBox object\r\ndef create_bounding_box(height) :\r\n    bounding_box = BoundingBoxXYZ()\r\n    bounding_box.Min = XYZ(0 , 0 , 0)\r\n    bounding_box.Max = XYZ(0 , 0 , height)\r\n\r\n    return bounding_box\r\n\r\n## Create new stories in a Revit document\r\n# Creates a new story for each elevation except for the reference elevation\r\n# @param doc: DBDocument Revit document\r\n# @param number_of_stories\r\n# @param ref_elevation: float Reference elevation\r\n# @param story_z: list<float> List of the elevation of all stories\r\n# @return None\r\n# @raises ValueError\r\ndef create_new_stories(doc , number_of_stories , ref_elevation , story_z) : \r\n    if len(story_z) != number_of_stories : \r\n        raise ValueError(\"Number of stories and elevations are not equal.\")\r\n\r\n    for i in range(number_of_stories) : \r\n        if ref_elevation != story_z[i] : \r\n            new_level = Autodesk.Revit.DB.Level.Create(doc, story_z[i])\r\n            new_level.Name = f\"Story Level {i}\"\r\n\r\n## Creates the roof level in a given Revit document\r\n# @param doc: DBDocument Revit document\r\n# @param site_z: float Total height of model\r\n# @return None\r\ndef create_roof_level(doc , site_z) : \r\n    roof_level = Autodesk.Revit.DB.Level.Create(doc, site_z)\r\n    roof_level.Name = \"Roof Level\"\r\n\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Revit Doc\r\nDOC = DocumentManager.Instance.CurrentDBDocument\r\nTransactionManager.Instance.EnsureInTransaction(DOC)\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Constants...\r\nEXTERIOR_WALL_TYPE = UnwrapElement(IN[0])\r\nEXTERIOR_WALL_THICKNESS = 0.3\r\nINTERIOR_WALL_TYPE = UnwrapElement(IN[2])\r\nINTERIOR_WALL_THICKNESS = 0.2\r\nFLOOR_TYPE = UnwrapElement(IN[1])\r\nFLOOR_THICKNESS = 0.3\r\n\r\nparameter_list = UnwrapElement(IN[3][1])\r\nSITE_X = parameter_list[0]\r\nSITE_Y = parameter_list[1]\r\nCORRIDOR_WIDTH = parameter_list[2]\r\nNUM_ROOMS_NORTH_SIDE = parameter_list[3]\r\nNUM_ROOMS_SIDE_SIDE = parameter_list[4]\r\nUSE_BOTTLENECKS = parameter_list[5]\r\n\r\nnew_parameter_list = UnwrapElement(IN[3][2])\r\nDOOR_WIDTH_HALF = convert_to_revit_units(new_parameter_list[0] / 2.)\r\nOBSTACLE_WIDTH = new_parameter_list[1]\r\n\r\nCREATE_MODE_ON = convert_to_bool(IN[4])\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Input parameters...\r\n\r\ntotal_num_stories = 1\r\nstory_z = [0]\r\ntotal_height = 4\r\nref_level_z = 0\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Output dict...\r\nroom_dict = {}\r\n\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Script 1...\r\n\r\nsite_x , site_y , site_z = convert_to_revit_units(SITE_X - 0.3) , convert_to_revit_units(SITE_Y - 0.3) , convert_to_revit_units(total_height)\r\n\r\nlevel_array = get_all_levels(DOC)\r\nclear_model(DOC)\r\n\r\nref_level = verify_number_of_levels(DOC , convert_to_revit_units(ref_level_z))\r\nsite_b_box = create_bounding_box(site_z)\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\n# Script 2...\r\n\r\ncorridor_width = convert_to_revit_units(CORRIDOR_WIDTH)\r\nstory_z = convert_to_revit_units(story_z)\r\n\r\ncreate_new_stories(DOC , total_num_stories , ref_level.Elevation , story_z)\r\ncreate_roof_level(DOC , site_z)\r\n\r\n#-----------------------------------------------------------------------------------------------------------------#\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\nOUT = room_dict",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "338b29ca94854800b8e848413b7c9cc9",
      "Inputs": [
        {
          "Id": "96910a45b2054dafb31774c3598f8952",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1dfc555901e4434fb7eb654f88199b7a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df7a72e058dd4a9b852b67a68735187c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9635bec1d99c4363a23a39dfc4d87a7e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a608226471c4e8d81fa70faa887b980",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "676e5f0a8dbd4a82ae47caf49fef18c1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "40b60ef0730c4611b72c8dcc7d164cc9",
      "Inputs": [
        {
          "Id": "ff0b6085e16d494f9a34152f1e89fa5b",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dbabe434a184da4a04faa75e805f56d",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "068d844ac2514409b56f6d8fa7a75d4f",
      "Inputs": [
        {
          "Id": "92755bca542c41dd9747f98a433d3b51",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5c6ebe8a8ec48dd9408548251b9ab85",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "64dbfe001638479a97e953d0f9bb2d5a",
      "Inputs": [
        {
          "Id": "a141138b345641d9a3124a745aaea4ce",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2220ad6fb3564055831fc7ffd6dfe8c9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8842b67bc361410d9b26ef1f7a33f62f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "a70f593b8c4c49f1b75c24e09faeb1fe",
      "Inputs": [
        {
          "Id": "c0f059a6fe984b269530fb1e6baf2d56",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b32b3dd9f1e54fd7b76165ed09768e1f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce5648a951b448078cb3f18dd21fbd22",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "e2f262c3ef3f43eea9eaef9623533d27",
      "Inputs": [
        {
          "Id": "1ef1d8b5a84e4073a71fbe3bd5fe4acc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be336bb9b15a4d9db9b825a929ed66fa",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2639ea4451c541f4bcf5e1ef5db8abd9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3efea5437bba44ba9afecfc68958c2cc",
      "Inputs": [
        {
          "Id": "775e85b8708e4a4bb4c0970ed156a9a8",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c7bf883712841fe97b7daab5bdb9007",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6fa88ddf11fd454080190b09e4f4d31a",
      "Inputs": [
        {
          "Id": "b8bb3400a11a4e2380d70d0a83c94029",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be35a0681e384c2bb8270be7c51923f3",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3af5e4c914164e91afe7b4bd3e38f832",
      "Inputs": [
        {
          "Id": "0f75274f62b34f1882fd632b5851e6ff",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5de14ac62104d88a1c777dcf740f555",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementTypes, DSRevitNodesUI",
      "SelectedIndex": 350,
      "SelectedString": "ViewPlan",
      "NodeType": "ExtensionNode",
      "Id": "e1680d7218894614aae4866f00bf58f3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0028b728975b44b981347b82600a8f50",
          "Name": "Types",
          "Description": "The selected Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All element subtypes."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "323045534973492a9e9e5a327a0be0e2",
      "Inputs": [
        {
          "Id": "85e3b67bf1134b0884dca78cbd240182",
          "Name": "element type",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45464a4dd958490cb95f56a4fdab4529",
          "Name": "elements",
          "Description": "All elements in the active document of a given type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All elements in the active document of a given type."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2317deac20e448939e2e1eb5ee4ac7c8",
      "Inputs": [
        {
          "Id": "edea549acc5e4e6e91db4ffdbfaba5dd",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d8c151e3e5a4e068cdb11c02368aba4",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "OUT = IN[0];",
      "Id": "99874e3f6ab14d828c402c9003503321",
      "Inputs": [
        {
          "Id": "b4031ce11d4f45fa9df25afaf63251df",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91e0696ab441446e94e624579e4a50ed",
          "Name": "",
          "Description": "OUT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "eee04be1a82d4cd198218ce0338563d8",
      "Inputs": [
        {
          "Id": "00ad71322bed4bdb916ccab0242501ff",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63f639eb23cc4daaaa614abf20f483fa",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element Id for this element\n\nElement.Id: int"
    }
  ],
  "Connectors": [
    {
      "Start": "57a773fc8da24a78be1f36ab38b5554d",
      "End": "c4d399a3404c4c42966b9e99d874cb1b",
      "Id": "0a8668f2dc00405f9f67ce7505db38be"
    },
    {
      "Start": "0e050ea3a03d49e6b2bca5a90f0f2bf4",
      "End": "f46f43c36d19488c805c98ee55fceda1",
      "Id": "fbf0ad51d8b048079c2b2808c822e383"
    },
    {
      "Start": "21977fcf52c4488a8c86b162ac5e84a5",
      "End": "d3ecbd099ff942bfa29e7afe9bdf4a4d",
      "Id": "37e5209f5622483fb2ca034c8c653052"
    },
    {
      "Start": "3b342a625dda4df3b3c26de36d99add9",
      "End": "df084057c9e24b7f80480255772d0ccf",
      "Id": "5b689a10d0c44744be8cadf045d175e0"
    },
    {
      "Start": "71b3ed6b2bb44c8391192a164c9b036d",
      "End": "f54d0329fb0545cab4d6c9a559bde2e1",
      "Id": "f450a4065e1e42d3832446aeec6f8c7f"
    },
    {
      "Start": "b4e20251951b48cba71eab0b1773658f",
      "End": "c08edd06b553430a8678f1378ee2b707",
      "Id": "c7ceab438ced4dca8462002dc3e4c88c"
    },
    {
      "Start": "f59c9f9092954ba49afb8343d061fb0a",
      "End": "5bbfda944f954ca7a19421fa17250212",
      "Id": "9639cd0da96540cfa50d38b4be7424f8"
    },
    {
      "Start": "56c29046eb3b4a8c8a7c573c1329a27f",
      "End": "9635bec1d99c4363a23a39dfc4d87a7e",
      "Id": "6a9f1dbe6d7746759a9a7c9500a2625d"
    },
    {
      "Start": "56c29046eb3b4a8c8a7c573c1329a27f",
      "End": "4e0ae67c95fa4b3c8f4920c68376f10a",
      "Id": "05db45b2e1dd4ff194d7ffcce0d4fb87"
    },
    {
      "Start": "8dbb6de9e00b4a459ef8bea0657d1335",
      "End": "31837d4788064fae94d12e6a1018745c",
      "Id": "54387e764f2240b2813132a857e4a279"
    },
    {
      "Start": "66d37cad1d2443dda396713db9b0b3cb",
      "End": "df7a72e058dd4a9b852b67a68735187c",
      "Id": "f67a0efb8b344c3e95c4d057ad258018"
    },
    {
      "Start": "ae0cf6cafcc6406cb717ae4ccc415e52",
      "End": "96910a45b2054dafb31774c3598f8952",
      "Id": "6378c4bd46644d1bb274be89d69fb6b9"
    },
    {
      "Start": "5366f32cc9e84c7585cba56bcba2278a",
      "End": "1dfc555901e4434fb7eb654f88199b7a",
      "Id": "2a680f3cbcc04085aa1bbbc96dfb57c7"
    },
    {
      "Start": "6366b875e894424e9089f7965fac2894",
      "End": "0a608226471c4e8d81fa70faa887b980",
      "Id": "deedd7a6379b48c1a9f27bc03e5d76ca"
    },
    {
      "Start": "6366b875e894424e9089f7965fac2894",
      "End": "fa5e2172da6841089898fbac616b410d",
      "Id": "9e5b4cdb34ce4739a9d96848da3f8793"
    },
    {
      "Start": "b8fa9382ed3c4b3c8d4d56d88c3fc639",
      "End": "08d900322d234f5195644f0c3cf78a83",
      "Id": "315757d06fd8428fb3a64711cc849a39"
    },
    {
      "Start": "68fe2ff24ee646d0b2b23baa41df47d0",
      "End": "69fec162dfe64c5da3613e8d6c0dbbd8",
      "Id": "3ca57fc3d6234be993321f6723ea9a58"
    },
    {
      "Start": "45e93c31d4434ec1b103cb5f7b590392",
      "End": "a4d937c27a044eb3896cfc1938c98388",
      "Id": "9603190469d041f09fdc1e1f211ce95a"
    },
    {
      "Start": "b37a468fee85491480f983d3c516a350",
      "End": "ff0b6085e16d494f9a34152f1e89fa5b",
      "Id": "ff2e065578b140239daf38c0f564a78f"
    },
    {
      "Start": "b37a468fee85491480f983d3c516a350",
      "End": "be336bb9b15a4d9db9b825a929ed66fa",
      "Id": "d95ab57522b84a0ab31472649a695be2"
    },
    {
      "Start": "b37a468fee85491480f983d3c516a350",
      "End": "c0f059a6fe984b269530fb1e6baf2d56",
      "Id": "dcc1dac6384d46089b8643bcd7764980"
    },
    {
      "Start": "b37a468fee85491480f983d3c516a350",
      "End": "a141138b345641d9a3124a745aaea4ce",
      "Id": "32c4d1b2dbfd4f2cb686e9150fab152d"
    },
    {
      "Start": "676e5f0a8dbd4a82ae47caf49fef18c1",
      "End": "92755bca542c41dd9747f98a433d3b51",
      "Id": "083b034e46ab45b3bc006c030121b741"
    },
    {
      "Start": "676e5f0a8dbd4a82ae47caf49fef18c1",
      "End": "1ef1d8b5a84e4073a71fbe3bd5fe4acc",
      "Id": "f172c6d1c7ff4a9189c82c7a656f25fb"
    },
    {
      "Start": "8842b67bc361410d9b26ef1f7a33f62f",
      "End": "b8bb3400a11a4e2380d70d0a83c94029",
      "Id": "6d585957b0cc461181df70850ec7941d"
    },
    {
      "Start": "ce5648a951b448078cb3f18dd21fbd22",
      "End": "775e85b8708e4a4bb4c0970ed156a9a8",
      "Id": "ca5c8b64750d40c0af99f4367d0c91ca"
    },
    {
      "Start": "2639ea4451c541f4bcf5e1ef5db8abd9",
      "End": "0f75274f62b34f1882fd632b5851e6ff",
      "Id": "6f874e55fd1145e09b11e3c5c8c3f963"
    },
    {
      "Start": "0028b728975b44b981347b82600a8f50",
      "End": "85e3b67bf1134b0884dca78cbd240182",
      "Id": "708a2a21528e46be943d7a4223a83d81"
    },
    {
      "Start": "45464a4dd958490cb95f56a4fdab4529",
      "End": "edea549acc5e4e6e91db4ffdbfaba5dd",
      "Id": "b7444e04437c488eb2efc499b734edbf"
    },
    {
      "Start": "9d8c151e3e5a4e068cdb11c02368aba4",
      "End": "b4031ce11d4f45fa9df25afaf63251df",
      "Id": "3d1c8f75664c4955bf552cc535a6872a"
    },
    {
      "Start": "91e0696ab441446e94e624579e4a50ed",
      "End": "00ad71322bed4bdb916ccab0242501ff",
      "Id": "9dee2823bc684c0a8d884c3f8b7d3c15"
    },
    {
      "Start": "63f639eb23cc4daaaa614abf20f483fa",
      "End": "2220ad6fb3564055831fc7ffd6dfe8c9",
      "Id": "0f33e1c833d040879ce5b7c88911e426"
    },
    {
      "Start": "63f639eb23cc4daaaa614abf20f483fa",
      "End": "b32b3dd9f1e54fd7b76165ed09768e1f",
      "Id": "72c86701854941b494c25d8fce5d225a"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "TOTAL_LENGTH_X",
        "Id": "ef2168aad5004db0a098adba42ccfeb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 209.3799997440542,
        "Y": 180.14594677604089
      },
      {
        "ShowGeometry": true,
        "Name": "SITE_LENGTH_Y",
        "Id": "8d2bf597c805461ca63d2772eac2790a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 209.3799997440542,
        "Y": 251.14594677604089
      },
      {
        "ShowGeometry": true,
        "Name": "CORRIDOR_WIDTH",
        "Id": "65c332a7b7304370a800b1f45400da03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 210.3799997440542,
        "Y": 323.14594677604089
      },
      {
        "ShowGeometry": true,
        "Name": "NUM_ROOMS_NORTH_SIDE",
        "Id": "77b65c47486b4b969a0691ef975fd91a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 210.3799997440542,
        "Y": 398.14594677604089
      },
      {
        "ShowGeometry": true,
        "Name": "INCLUDE_BOTTLENECK",
        "Id": "49e6e351fbc246d6a437951ad5557c86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 309.68702610008791,
        "Y": 526.50162205742151
      },
      {
        "ShowGeometry": true,
        "Name": "DOOR_WIDTH",
        "Id": "5fc45f30ae92438cb211e84f4439c0d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 364.89135414600469,
        "Y": 587.94810695980993
      },
      {
        "ShowGeometry": true,
        "Name": "OBSTACLE_WIDTH",
        "Id": "fad7c277ca8547e59ed811f532d1a1e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 337.64383275513603,
        "Y": 648.35741843633616
      },
      {
        "ShowGeometry": true,
        "Name": "parameter_prep",
        "Id": "c614db2c9b21443f815195f46e7e4358",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 685.73031688968672,
        "Y": 298.22336674805291
      },
      {
        "ShowGeometry": true,
        "Name": "NUM_ROOMS_SOUTH_SIDE",
        "Id": "3c0bb1e27b974e12ae5e1808100f770c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 210.69464442371117,
        "Y": 464.07633860039766
      },
      {
        "ShowGeometry": true,
        "Name": "Interior Wall Type",
        "Id": "fedaeeaf3e29475e8d7081c0de5c1165",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 641.25309982928968,
        "Y": 77.4624003696762
      },
      {
        "ShowGeometry": true,
        "Name": "Exterior Wall Type",
        "Id": "3bacfb05095e4bfe8714510c7b26fed7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 640.68995302699864,
        "Y": -109.37513822290317
      },
      {
        "ShowGeometry": true,
        "Name": "Floor Types (cannot find 300mm foundation slab)",
        "Id": "1183b433f321498988973f9514f8798c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 471.78620556720284,
        "Y": -15.974740903358082
      },
      {
        "ShowGeometry": true,
        "Name": "Create Build (True) or Export Floorplan (False)",
        "Id": "32fecd23e28e4038af64c742d9280202",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 513.17706188892794,
        "Y": 733.16902750166082
      },
      {
        "ShowGeometry": true,
        "Name": "Directory Path",
        "Id": "ab519910f7d44ca7acbe1d0a049b734e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 705.9569502946033,
        "Y": 800.245588761731
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "15ae43c2e5754d459090ff7f660695e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 773.71075054279629,
        "Y": 889.05800260057822
      },
      {
        "ShowGeometry": true,
        "Name": "Create Folder Structure",
        "Id": "08d56833effd41699d17b1f9eac93c6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 648.27466089411485,
        "Y": 952.23384337254151
      },
      {
        "ShowGeometry": true,
        "Name": "Create Folder",
        "Id": "42e933ab5a9e45a481e1a7d936f8ec0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1139.8776413350427,
        "Y": 763.09341579305794
      },
      {
        "ShowGeometry": true,
        "Name": "Create Diagonal Geometry",
        "Id": "338b29ca94854800b8e848413b7c9cc9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1059.0913527951723,
        "Y": 320.28827184249008
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "40b60ef0730c4611b72c8dcc7d164cc9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1669.8579638591939,
        "Y": 856.437437416814
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "068d844ac2514409b56f6d8fa7a75d4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1423.3138585720224,
        "Y": 200.846908346072
      },
      {
        "ShowGeometry": true,
        "Name": "ExportToDXF",
        "Id": "64dbfe001638479a97e953d0f9bb2d5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1425.6737332546347,
        "Y": 706.51213002347561
      },
      {
        "ShowGeometry": true,
        "Name": "ExportToPDF",
        "Id": "a70f593b8c4c49f1b75c24e09faeb1fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1423.9708486005857,
        "Y": 551.66683410412543
      },
      {
        "ShowGeometry": true,
        "Name": "ExportAsTXT",
        "Id": "e2f262c3ef3f43eea9eaef9623533d27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1423.9708486005854,
        "Y": 409.60350280128233
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "3efea5437bba44ba9afecfc68958c2cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1667.1200336511868,
        "Y": 571.42775006919919
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "6fa88ddf11fd454080190b09e4f4d31a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1669.621361409912,
        "Y": 721.50741559272444
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "3af5e4c914164e91afe7b4bd3e38f832",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1664.6187058924613,
        "Y": 436.35605109802657
      },
      {
        "ShowGeometry": true,
        "Name": "Element Types",
        "Id": "e1680d7218894614aae4866f00bf58f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 442.92704955553774,
        "Y": 1099.8590223747537
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Type",
        "Id": "323045534973492a9e9e5a327a0be0e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 605.66663282869183,
        "Y": 1099.3537052702677
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "2317deac20e448939e2e1eb5ee4ac7c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 821.40842871394011,
        "Y": 1098.8387491381238
      },
      {
        "ShowGeometry": true,
        "Name": "ViewPlanSelector",
        "Id": "99874e3f6ab14d828c402c9003503321",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 916.94458683943753,
        "Y": 1099.3398729257083
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Id",
        "Id": "eee04be1a82d4cd198218ce0338563d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1114.6506842634949,
        "Y": 1098.7285846288776
      }
    ],
    "Annotations": [],
    "X": 262.74987274779733,
    "Y": 122.37414622954407,
    "Zoom": 0.51598827783907508
  }
}