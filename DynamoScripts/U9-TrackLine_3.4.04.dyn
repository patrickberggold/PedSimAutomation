{
  "Uuid": "4bd6fa9f-b9a8-4d38-9d8a-90a464c6d5b2",
  "IsCustomNode": false,
  "Description": null,
  "Name": "U9-TrackLine_3.4.04",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "5a1fb6986487418a80057656a50ca8a1",
      "Name": "Wall Height",
      "Type": "number",
      "Value": "8",
      "MaximumValue": 50.0,
      "MinimumValue": 5.0,
      "StepValue": 0.1,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "b946a6d5f8134cbd98d05f5965d1fa06",
      "Name": "Delete All Elements Before Each Run",
      "Type": "boolean",
      "Value": "true",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "Id": "d81e3a3ec50544a4a711c14418961e25",
      "Name": "No of Column Rows",
      "Type": "number",
      "Value": "2",
      "MaximumValue": 2.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "Id": "f720c80e6f1d4f21bebdcb9555f2933e",
      "Name": "Terminus",
      "Type": "boolean",
      "Value": "false",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "Id": "3cb6533b3fa5459f9123ae291f780de2",
      "Name": "Max. Train Length",
      "Type": "number",
      "Value": "115",
      "NumberType": "Double",
      "Description": "Erstellt eine Zahl."
    },
    {
      "Id": "2f3255ccafbc41a380f658fde805b3c4",
      "Name": "Bumper Length",
      "Type": "number",
      "Value": "10",
      "NumberType": "Double",
      "Description": "Erstellt eine Zahl."
    },
    {
      "Id": "7b33e5c900614f629567cf0acb30494b",
      "Name": "Standard Length",
      "Type": "boolean",
      "Value": "true",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "Id": "3949bf9b3e7a4dcfb52c38c63d41f89c",
      "Name": "Traffic Level i",
      "Type": "number",
      "Value": "1",
      "MaximumValue": 3.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "2122344a6c6c4f5e900634e71d62c5eb",
      "Name": "Local Traffic",
      "Type": "boolean",
      "Value": "true",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "Id": "859c366329bb4d16875a776dac8f000a",
      "Name": "Elevator Length [m]",
      "Type": "number",
      "Value": "6",
      "MaximumValue": 10.0,
      "MinimumValue": 6.0,
      "StepValue": 0.5,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "04530e04386248d3a3affe3762d7660b",
      "Name": "Velocity [km/h]",
      "Type": "number",
      "Value": "100",
      "MaximumValue": 230.0,
      "MinimumValue": 10.0,
      "StepValue": 10.0,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "b420fc1637f44fc5a6fd8e9929a525df",
      "Name": "Train Frequency [n/h]",
      "Type": "number",
      "Value": "3",
      "MaximumValue": 15.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "d5fd982584d446088314965fc077506a",
      "Name": "Elevator Position",
      "Type": "number",
      "Value": "2",
      "MaximumValue": 3.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "619194ee147a46bf869e3e6373ed406f",
      "Name": "Exit  X Offset [m]",
      "Type": "number",
      "Value": "20",
      "MaximumValue": 50.0,
      "MinimumValue": 5.0,
      "StepValue": 0.5,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "5f4f339b8e3e4864bf9f6a99777f8b4c",
      "Name": "Ticketmachine X Offset [m]",
      "Type": "number",
      "Value": "7",
      "MaximumValue": 15.0,
      "MinimumValue": 3.0,
      "StepValue": 1.0,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "e15d5903d5f94bfabbbc763e0f037f08",
      "Name": "Escalators Facing Inwards",
      "Type": "boolean",
      "Value": "true",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "Id": "31a13685283c42b9add86dd57ed46c95",
      "Name": "Index",
      "Type": "number",
      "Value": "1",
      "MaximumValue": 3.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "Id": "5d9828480221475baf6e48bad2b42525",
      "Name": "Passengers/Train",
      "Type": "number",
      "Value": "100",
      "MaximumValue": 100.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "NumberType": "Double",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "Id": "d087c5b10db143da9f71e77163911823",
      "Name": "Regional Traffic",
      "Type": "boolean",
      "Value": "true",
      "Description": "Auswahl zwischen True und False"
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "EG",
      "NodeType": "ExtensionNode",
      "Id": "91184f7c047c40aaa110ded98cf3e461",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0b572195c4804c18a64f36fa000d3217",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Wählen Sie eine Ebene im aktiven Dokument."
    },
    {
      "ConcreteType": "DSRevitNodesUI.WallTypes, DSRevitNodesUI",
      "SelectedIndex": 3,
      "SelectedString": "STB 20.0",
      "NodeType": "ExtensionNode",
      "Id": "16ebeca796054d8f923afbaf528319bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "645ffdbbd04b407ba2aeb46ca5ab76ec",
          "Name": "Wall Type",
          "Description": "The selected Wall Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Wandtypen."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 50.0,
      "MinimumValue": 5.0,
      "StepValue": 0.1,
      "InputValue": 8.0,
      "Id": "5a1fb6986487418a80057656a50ca8a1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5f6d3e15c28d4dbabb280bdded66e5e8",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport clr\r\nimport math\r\n\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#Import Revit Nodes\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Architecture import *\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n# Length - Width - height variables\r\n\r\nlevelEG = UnwrapElement(IN[0])\r\nallElements = UnwrapElement(IN[1])\r\nisDeleteAll = IN[2]\r\n\r\ngeneralParameterList = IN[3]\r\nnumberOfLevels = generalParameterList[0]\r\ntrackLineCount = generalParameterList[1]\r\nnumberofExits = generalParameterList[2]\r\ncolumnRows = generalParameterList[3]\r\ncolumnSpacing = generalParameterList[4]\r\nwallHeight = generalParameterList[5]\r\n\r\nverticalTransportationList = IN[4]\r\nnumberOfStairs = verticalTransportationList[0]\r\nstairWidth = verticalTransportationList[1]\r\nescOrientation = verticalTransportationList[2]\r\nnumberOfEscalators = verticalTransportationList[3]\r\nescalatorWidth = verticalTransportationList[4]\r\nelevatorPosition = verticalTransportationList[5]\r\nelevatorLength = verticalTransportationList[6]\r\n\r\nclearanceVariablesList = IN[5]\r\n\r\nWidthCalcList = IN[6]\r\nplatformWidth = WidthCalcList[0]\r\nplatformHeight = WidthCalcList[1]\r\ntrafficLevel = WidthCalcList[2]\r\nregional = WidthCalcList[3]\r\nouterTrack = WidthCalcList[4]\r\ninnerTracks = WidthCalcList[5]\r\ndistTracks = WidthCalcList[6]\r\ndistTrackPlatform = WidthCalcList[7]\r\ndangerZone = WidthCalcList[8]\r\nsafetyStripPlatform = WidthCalcList[9]\r\n\r\ntopLevelList = IN[7]\r\nexitOffset = topLevelList[0]\r\nnumberOfMachines = topLevelList[1]\r\nticketXOffset = topLevelList[2]\r\n\r\ncrowditList = IN[8]\r\n\r\nlength = IN[9]\r\n\r\ntypeList = IN[10]\r\nfloorType = UnwrapElement(typeList[0])\r\nwallType = UnwrapElement(typeList[1])\r\n\r\npassengers = IN[11]\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Place your code below this line\r\nplatformCount=int(math.ceil(float(trackLineCount)/2))\r\nwallThickness= UnitUtils.ConvertFromInternalUnits(wallType.Width, DisplayUnitType.DUT_METERS)\r\n# issue resolved here: https://forum.dynamobim.com/t/display-unit-type-not-defined/83129: use UnitTypeId.Meters\r\n\r\nwidth = platformCount * platformWidth + (platformCount - 1) * (innerTracks) + wallThickness\r\nif trackLineCount %2 ==0:\r\n\twidth += 2 * outerTrack\r\nelse:\r\n\twidth += outerTrack\r\n\r\nyAxisList = []\r\nrevitApiYAxisList = []\r\nfor indexY in range(platformCount):\r\n\tyAxis = (indexY * platformWidth) + outerTrack + wallThickness/2 + indexY * innerTracks\r\n\tyAxisList.append(yAxis)\r\n\trevitApiYAxisList.append(UnitUtils.ConvertToInternalUnits(yAxis, DisplayUnitType.DUT_METERS))\r\n\r\nescalatorLength = (wallHeight * 1.732050808) + 3.5 + 2.950 +0.4 #Family specific\r\n\r\n# Revit Api Unit Type Conversion\r\nrevitApiLength = UnitUtils.ConvertToInternalUnits(length, DisplayUnitType.DUT_METERS)\r\nrevitApiWidth = UnitUtils.ConvertToInternalUnits(width, DisplayUnitType.DUT_METERS)\r\nrevitApiWallHeight = UnitUtils.ConvertToInternalUnits(wallHeight, DisplayUnitType.DUT_METERS)\r\nrevitApiPlatformHeight = UnitUtils.ConvertToInternalUnits(platformHeight, DisplayUnitType.DUT_METERS)\r\nrevitApiPlatformWidth = UnitUtils.ConvertToInternalUnits(platformWidth, DisplayUnitType.DUT_METERS)\r\nrevitApiStairWidth = UnitUtils.ConvertToInternalUnits(stairWidth, DisplayUnitType.DUT_METERS)\r\nrevitApiEscalatorWidth = UnitUtils.ConvertToInternalUnits(escalatorWidth, DisplayUnitType.DUT_METERS)\r\nrevitApiEscalatorLength = UnitUtils.ConvertToInternalUnits(escalatorLength, DisplayUnitType.DUT_METERS)\r\nrevitApiElevatorLength = UnitUtils.ConvertToInternalUnits(elevatorLength, DisplayUnitType.DUT_METERS)\r\n\r\n#OUT OF ORDER Stair width calculation\r\n\t# set variables dependant on traffic Level\r\n\t#if trafficLevel == 1:\r\n\t#\tv = 1.3 # [m/s]\r\n\t#\tif regional:\r\n\t#\t\td = 0.5 # [p/m^2]\r\n\t#\telse: \r\n\t#\t\td = 0.3\r\n\t#elif trafficLevel == 2:\r\n\t#\tv = 1.3\r\n\t#\tif regional:\r\n\t#\t\td = 1\r\n\t#\telse: \r\n\t#\t\td = 0.8\r\n\t#elif trafficLevel == 3:\r\n\t#\tv = 1.3\r\n\t#\td = 1\r\n\t#clearanceTime = 150 # [s]\r\n\t#stairWidth = passengers/(v * d * clearanceTime) + 0.8 # 813.0202A01 p.1\r\n\t# set the width to a standard value \r\n\t#if stairWidth < 0.8:\r\n\t#\tstairWidth = 0.8\r\n\t#elif stairWidth < 1.6:\r\n\t#\tstairWidth = 1.6\r\n\t#elif stairWidth < 2.4:\r\n\r\n#Start Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n# Before Run delete everything for the first time Revit Opened \r\nlevelArr = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Levels).WhereElementIsNotElementType().ToElements()\r\nviewArr = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Views).ToElements()\r\n\r\nfor view in viewArr:\r\n\tif view.Name != IN[12].Name and view.ViewType == ViewType.FloorPlan:\r\n\t\tprint (view.Title.ToString(), view.Id.ToString(), view.Name.ToString())\r\n\t\tdoc.Delete(view.Id)\r\n\t\t\r\nif levelArr.Count >= 1:\r\n\tfor levelElem in levelArr:\r\n\t\tif round(levelElem.Elevation,2) == 0.0:\r\n\t\t\tcontinue\r\n\t\tdoc.Delete(levelElem.Id)\r\n\t\t#doc.Regenerate()\r\nif isDeleteAll:\r\n\tfor el in range(len(allElements)-1, -1, -1):\r\n\t\tdoc.Delete(allElements[el].Id)\r\n\t\tdoc.Regenerate()\r\n\r\n# Create Walls based on sizes\r\npoint1 = XYZ(0, 0, 0)\r\npoint2 = XYZ(revitApiLength, 0, 0)\r\npoint3 = XYZ(revitApiLength, revitApiWidth, 0)\r\npoint4 = XYZ(0, revitApiWidth, 0)\r\n\r\n# Create 4 Line/Curve for 4 Walls\r\nline1 = Autodesk.Revit.DB.Line.CreateBound(point1, point2)\r\nline2 = Autodesk.Revit.DB.Line.CreateBound(point2, point3)\r\nline3 = Autodesk.Revit.DB.Line.CreateBound(point3, point4)\r\nline4 = Autodesk.Revit.DB.Line.CreateBound(point4, point1)\r\nwall1 = Autodesk.Revit.DB.Wall.Create(doc, line1, wallType.Id, levelEG.Id, numberOfLevels * revitApiWallHeight, -revitApiPlatformHeight, False, False)\r\nwall2 = Autodesk.Revit.DB.Wall.Create(doc, line2, wallType.Id, levelEG.Id, numberOfLevels * revitApiWallHeight, -revitApiPlatformHeight, False, False)\r\nwall3 = Autodesk.Revit.DB.Wall.Create(doc, line3, wallType.Id, levelEG.Id, numberOfLevels * revitApiWallHeight, -revitApiPlatformHeight, False, False)\r\nwall4 = Autodesk.Revit.DB.Wall.Create(doc, line4, wallType.Id, levelEG.Id, numberOfLevels * revitApiWallHeight, -revitApiPlatformHeight, False, False)\r\nwallList = [wall1, wall2, wall3, wall4]\r\n\r\n# Base Level Floor creation\r\nfloorList = []\r\ncarray = CurveArray()\r\ncarray.Append(line1)\r\ncarray.Append(line2)\r\ncarray.Append(line3)\r\ncarray.Append(line4)\r\nfloor = doc.Create.NewFloor(carray, floorType, levelEG, False)\r\nfloor.GetParameters(\"Height Offset From Level\")[0].Set(-revitApiPlatformHeight)\r\nfloorList.append(floor)\r\n\r\n# Upper Level and their Floor creation based on numberOfLevels arg\r\nlevelList = []\r\nlevelList.append(levelEG)\r\nif numberOfLevels > 1:\r\n\tfor levelNumber in range(1, numberOfLevels):\r\n\t\tnewLevel = Autodesk.Revit.DB.Level.Create(doc, levelNumber * revitApiWallHeight)\r\n\t\tlevelList.append(newLevel)\r\n\t\tlineF1 = Autodesk.Revit.DB.Line.CreateBound(XYZ(point1.X, point1.Y, levelNumber*revitApiWallHeight), XYZ(point2.X, point2.Y, levelNumber*revitApiWallHeight))\r\n\t\tlineF2 = Autodesk.Revit.DB.Line.CreateBound(XYZ(point2.X, point2.Y, levelNumber*revitApiWallHeight), XYZ(point3.X, point3.Y, levelNumber*revitApiWallHeight))\r\n\t\tlineF3 = Autodesk.Revit.DB.Line.CreateBound(XYZ(point3.X, point3.Y, levelNumber*revitApiWallHeight), XYZ(point4.X, point4.Y, levelNumber*revitApiWallHeight))\r\n\t\tlineF4 = Autodesk.Revit.DB.Line.CreateBound(XYZ(point4.X, point4.Y, levelNumber*revitApiWallHeight), XYZ(point1.X, point1.Y, levelNumber*revitApiWallHeight))\r\n\t\tcarray = CurveArray()\r\n\t\tcarray.Append(lineF1)\r\n\t\tcarray.Append(lineF2)\r\n\t\tcarray.Append(lineF3)\r\n\t\tcarray.Append(lineF4)\r\n\t\tnewFloor = doc.Create.NewFloor(carray, floorType, newLevel, False)\r\n\t\tfloorList.append(newFloor)\r\n\t\t\r\n\tlevelNumber += 1\r\n\tnewLevel = Autodesk.Revit.DB.Level.Create(doc, (levelNumber - 1) * revitApiWallHeight + UnitUtils.ConvertToInternalUnits(4.5, DisplayUnitType.DUT_METERS))\r\n\tlevelList.append(newLevel)\r\n\r\nbaseValueList = [length, width, platformHeight, platformWidth, wallHeight, wallThickness, trackLineCount, platformCount, columnRows, columnSpacing, numberOfLevels]\r\nrevitApiBaseList = [revitApiLength, revitApiWidth, revitApiPlatformHeight, revitApiPlatformWidth, revitApiWallHeight, revitApiStairWidth, revitApiEscalatorWidth, revitApiEscalatorLength, revitApiElevatorLength]\r\nelevationList = [numberOfEscalators, numberOfStairs, escOrientation, elevatorPosition, elevatorLength, escalatorLength, escalatorWidth, stairWidth]\r\nlistList = [levelList, floorList, wallList, yAxisList, revitApiYAxisList, clearanceVariablesList]\r\nupperLevelList = [exitOffset, ticketXOffset, numberOfMachines, numberofExits]\r\ntrackDataList = [distTracks, distTrackPlatform, outerTrack, innerTracks, dangerZone, safetyStripPlatform]\r\n#End Transaction\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Assign your output to the OUT variable.\r\nOUT = [baseValueList, revitApiBaseList, elevationList, listList, upperLevelList, trackDataList, typeList, crowditList]\r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "b94ab649f1304a028e41b8d07f94707c",
      "Inputs": [
        {
          "Id": "3a011102234f42c4b74e9c62279d45f4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e154bc06cdbf4fef9360d5ce95419d27",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9a35393200549b8a4832dc9dae0dad0",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2ad106d3c294f04b9e1d80d0aa92887",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5943cd6dee264bb4a36f9fb626bbf566",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a9f101c21f54747ad313a47b414ef06",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ab31926bb6a4dd0a5f99839ef8e237c",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb41d47510df402ba4184879b18665cd",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7af0da1fea204424a5e6e2b2f447c68e",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d40eb4ae6bf428da5d97e8d0ea57ce7",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d28b5e53f4c74e919ffdb028890f0fd4",
          "Name": "IN[10]",
          "Description": "Input #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f15be15f312a4fd5813e4b588e504fac",
          "Name": "IN[11]",
          "Description": "Input #11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb0739e1728a4df8b68c39af95e8bf2b",
          "Name": "IN[12]",
          "Description": "Input #12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "905a14a04b0046599157d19ffedc3987",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralColumnTypes, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "600 x 750mm",
      "NodeType": "ExtensionNode",
      "Id": "d7a859123a084f57bf9f6c049349a8b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "902a109168e44eb5b2a8fb7d3f1f9533",
          "Name": "Column Types",
          "Description": "The selected Column Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Wählen Sie einen Tragwerksstützentyp im aktiven Dokument."
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 21,
      "SelectedString": "IC_Destination_withL:IC_Destination_withL",
      "NodeType": "ExtensionNode",
      "Id": "066869354e7b44b8a9563afcbb0780e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a82ac3fd98cb4b90acc377a917e51dd0",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsAtLevel, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "b5296ebfad454f98b72cc564ba0e8214",
      "Inputs": [
        {
          "Id": "e2e02ee2610e403caa4a41a8023cd8f3",
          "Name": "Level",
          "Description": "A Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfa9577467c6426a9ceac6e10c957b9a",
          "Name": "Elements",
          "Description": "Elements at the given level.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ruft alle Elemente auf der angegebenen Ebene aus dem Modell ab."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b946a6d5f8134cbd98d05f5965d1fa06",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "69b0de06bd7448e4b6129fb0771528f2",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2,
      "MaximumValue": 2,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "d81e3a3ec50544a4a711c14418961e25",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad86877859104ddf97f25650d09add30",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 19,
      "SelectedString": "Construction-Escalator_2:FT-01 bis 12 - 30°",
      "NodeType": "ExtensionNode",
      "Id": "a546ad92001346f5bb198c55452494d8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "53c04e998cc340c2a5ffd57985de6635",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FloorTypes, DSRevitNodesUI",
      "SelectedIndex": 1,
      "SelectedString": "STB 20.0",
      "NodeType": "ExtensionNode",
      "Id": "52c8935a887d4c54825856a370029332",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e18afde8abd74940bd2c66f9ea6ebf89",
          "Name": "Floor Type",
          "Description": "The selected Floor Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Geschossdeckentypen."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport clr\r\nimport math\r\nfrom math import ceil\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#Import Revit Nodes\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Architecture import *\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Function to rotate a family instance around the z-axis\r\ndef ZRotateInstance(angle, instance, point):\r\n\tpoint2 = XYZ(point.X, point.Y, point.Z+10)\r\n\trotationLine = Line.CreateBound(point, point2)\r\n\trotated = instance.Location.Rotate(rotationLine, angle)\r\n\r\n# The inputs to this node are stored as a list in the IN variables.\r\n# Length - Width - height variables\r\nbaseValueList = IN[0][0]\r\nlength= baseValueList[0]\r\nplatformWidth = baseValueList[3]\r\nwallThickness = baseValueList[5]\r\ntrackLineCount = baseValueList[6]\r\nplatformCount = baseValueList[7]\r\ncolumnRows = baseValueList[8]\r\ncolumnSpacing = baseValueList[9]\r\nnumberOfLevels = baseValueList[10]\r\n\r\nrevitApiBaseList = IN[0][1]\r\nrevitApiLength = revitApiBaseList[0]\r\nrevitApiWidth = revitApiBaseList[1]\r\nrevitApiPlatformHeight = revitApiBaseList[2]\r\nrevitApiPlatformWidth = revitApiBaseList[3]\r\nrevitApiWallHeight = revitApiBaseList[4]\r\nrevitApiStairWidth = revitApiBaseList[5]\r\nrevitApiEscalatorWidth = revitApiBaseList[6]\r\nrevitApiEscalatorLength = revitApiBaseList[7]\r\nrevitApiElevatorLength = revitApiBaseList[8]\r\n\r\nelevationList = IN[0][2]\r\nnumberOfEscalators = elevationList[0]\r\nnumberOfStairs = elevationList[1]\r\nescOrientation = elevationList[2]\r\nelevatorPosition = elevationList[3]\r\nelevatorLength = elevationList[4]\r\nescalatorLength = elevationList[5]\r\nescalatorWidth = elevationList[6]  \r\nstairWidth = elevationList[7]\r\n\r\nlistList = IN[0][3]\r\nlevelEG = UnwrapElement(listList[0][0])\r\nlevelList = UnwrapElement(listList[0])\r\nfloorList = UnwrapElement(listList[1])\r\nwallList = listList[2]\r\nyAxisList = listList[3]\r\nrevitApiYAxisList = listList[4]\r\nclearanceVariablesList = listList[5]\r\n\r\nupperLevelList = IN[0][4]\r\nexitXOffset = upperLevelList[0]\r\nticketXOffset = upperLevelList[1]\r\nnrOfMachines = upperLevelList[2]\r\nnumberOfExits = upperLevelList[3]\r\n\r\ntrackDataList = IN[0][5]\r\ndistTracks = trackDataList[0]\r\ndistTrackPlatform = trackDataList[1]\r\ninnerTracks = trackDataList[3]\r\nsafetyStripWidth = trackDataList[5]\r\n\r\ntypeList = IN[0][6]\r\nfloorType = UnwrapElement(typeList[0])\r\nwallType = UnwrapElement(typeList[1])\r\ncolumnType = UnwrapElement(typeList[2])\r\nstairType = UnwrapElement(typeList[3])\r\nescalatorType = UnwrapElement(typeList[4])\r\ntrainType = UnwrapElement(typeList[5])\r\ntrainWallType = UnwrapElement(typeList[6])\r\natmType = UnwrapElement(typeList[7])\r\nticketType = UnwrapElement(typeList[8])\r\nstoreType = UnwrapElement(typeList[9])\r\nvalidatorType = UnwrapElement(typeList[10])\r\n\r\nnumberOfAgents = IN[0][7][0]\r\ntreadWidth = IN[0][7][1]\r\n\r\nescExitClearance = clearanceVariablesList[0]\t\t#[m] DIN EN 115-1 \r\nstairExitClearance = clearanceVariablesList[1]\t\t#[m] Ril.813.0202 5(5)\r\nelevatorExitClearance = clearanceVariablesList[2]\t#[m] Ril.813.0202 7(5)\r\nminPathWidth = clearanceVariablesList[3]\t\t\t#[m] Ril.813.0202 4(3)\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n#Start Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\r\n# Place your code below this line\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\n# Track Lines\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\ntrainList = []\r\ntrainPartLength = UnitUtils.ConvertFromInternalUnits(trainType.LookupParameter(\"length\").AsDouble(), DisplayUnitType.DUT_METERS)+0.5 #0.5 for Distance between waggons\r\nrotationAngle = math.pi\r\n\r\n#calculate waggon count\r\ntrainPartCount = int(length / trainPartLength)\r\ntrainLength = trainPartCount * trainPartLength\r\n\r\nif length - 1 <= trainLength:\r\n\ttrainPartCount -= 1\r\n\ttrainLength = trainPartCount * trainPartLength\r\n\t\r\nplacementMargin = (length - trainLength) / 2\r\n\r\n# Track line Y Axis Coordinates Calculation\r\nyAxisOfTrackLineCoordinateList = []\r\nfor indexY in range( platformCount):\r\n\tyAxis = yAxisList[indexY] - min(indexY,1)*distTracks\r\n\tyAxisOfTrackLineCoordinateList.append(yAxis)\r\n\tif indexY > 0 :\r\n\t\tsecondMiddleTrack = yAxis + distTracks\r\n\t\tyAxisOfTrackLineCoordinateList.append(secondMiddleTrack)\r\n\t\tyAxisWall = secondMiddleTrack - innerTracks/2\r\n\t\trevitApiYAxisWall = UnitUtils.ConvertToInternalUnits(yAxisWall, DisplayUnitType.DUT_METERS)\r\n\t\trevitApiInterWallHeight = UnitUtils.ConvertToInternalUnits(1.5, DisplayUnitType.DUT_METERS)\r\n\t\tpoint1 = XYZ(0, revitApiYAxisWall, 0)\r\n\t\tpoint2 = XYZ(revitApiLength, revitApiYAxisWall, 0)\r\n\t\tline1 = Autodesk.Revit.DB.Line.CreateBound(point1, point2)\r\n\t\tAutodesk.Revit.DB.Wall.Create(doc, line1, wallType.Id, levelEG.Id, revitApiInterWallHeight, -revitApiPlatformHeight, False, False)\r\nif trackLineCount%2 == 0:\r\n\tif trackLineCount == 2:\r\n\t\tyAxis =  yAxis + platformWidth + innerTracks - distTracks\r\n\t\tyAxisOfTrackLineCoordinateList.append(yAxis)\r\n\telse:\r\n\t\tyAxis =  yAxis + platformWidth + innerTracks\r\n\t\tyAxisOfTrackLineCoordinateList.append(yAxis)\r\n\r\ncounter = 0\r\n# Track Line Creation\r\nfor yAxis in yAxisOfTrackLineCoordinateList:\t\r\n\ttrainYAxis = UnitUtils.ConvertToInternalUnits(yAxis, DisplayUnitType.DUT_METERS) \r\n\t\r\n\tfor index in range(1,trainPartCount+1,1): \r\n\t\txAxis = index * trainPartLength - trainPartLength + placementMargin\r\n\t\trevitApiXAxis = UnitUtils.ConvertToInternalUnits(xAxis, DisplayUnitType.DUT_METERS)\r\n\t\t# Train Creation\r\n\t\ttrainPoint = XYZ(revitApiXAxis, trainYAxis + UnitUtils.ConvertToInternalUnits(-distTrackPlatform, DisplayUnitType.DUT_METERS), -revitApiPlatformHeight)\r\n\t\t\r\n\t\ttrain = doc.Create.NewFamilyInstance(trainPoint, trainType, levelEG, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\ttrain.LookupParameter(\"accu_rate_type\").Set(\"Origin\")\r\n\t\ttrain.LookupParameter(\"Number_Of_Agents\").Set(numberOfAgents)\r\n\t\t\t\r\n\t\ttrainWall = doc.Create.NewFamilyInstance(trainPoint, trainWallType, levelEG, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\ttrainWall.LookupParameter(\"IfcExportAs\").Set(\"IfcWall\")\r\n\t\t\r\n\t\tif counter%2 == 0:\r\n\t\t\trotationTrainPoint = XYZ(revitApiXAxis + UnitUtils.ConvertToInternalUnits(trainPartLength/2, DisplayUnitType.DUT_METERS), trainYAxis + UnitUtils.ConvertToInternalUnits(-distTrackPlatform, DisplayUnitType.DUT_METERS), 0)\r\n\t\t\tZRotateInstance(rotationAngle, train,  rotationTrainPoint)\r\n\t\t\tZRotateInstance(rotationAngle, trainWall, rotationTrainPoint)\r\n\t\twrapTrain = train.ToDSType(False)\t\t\t\r\n\t\ttrainList.append(wrapTrain)\r\n\tcounter = counter + 1\t\r\n\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\n# Platforms\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\nfor yAxis in revitApiYAxisList:\r\n\tpoint1 = XYZ(0, yAxis, 0)\r\n\tpoint2 = XYZ(revitApiLength, yAxis, 0)\r\n\tpoint3 = XYZ(revitApiLength, yAxis + revitApiPlatformWidth, 0)\r\n\tpoint4 = XYZ(0, yAxis + revitApiPlatformWidth, 0)\r\n\t\r\n\tline1 = Autodesk.Revit.DB.Line.CreateBound(point1, point2)\r\n\tline2 = Autodesk.Revit.DB.Line.CreateBound(point2, point3)\r\n\tline3 = Autodesk.Revit.DB.Line.CreateBound(point3, point4)\r\n\tline4 = Autodesk.Revit.DB.Line.CreateBound(point4, point1)\r\n\t\r\n\tcarray = CurveArray()\r\n\tcarray.Append(line1)\r\n\tcarray.Append(line2)\r\n\tcarray.Append(line3)\r\n\tcarray.Append(line4)\r\n\tfloor = doc.Create.NewFloor(carray, floorType, levelEG, False)\r\n\tfloor.GetParameters(\"Height Offset From Level\")[0].Set(0)\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\n# Elevators and Stairs\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\nescalatorList = []\r\nholeList = []\r\n#Offset to yAxis\r\nminDistToEdge = (platformWidth - escalatorWidth * numberOfEscalators - stairWidth * numberOfStairs)/2 #assures centered placement if ElevatorWidth was the decisive size after guidelines\r\n\r\n#xAxis Centered\r\nxAxisCenter = length/2\r\n\r\n# Parameters for lower escalator positioning (dependant on elevator position)\r\nif elevatorPosition == 1: \t#left\r\n\txAxisEscalator =  minPathWidth + escExitClearance + wallThickness/2# +- for both sides; Wallthickness/2 because it referrs to wall axis\r\n\txAxisCenter += elevatorLength\r\n\toccupiedXSpaceElevator = (0,elevatorLength + elevatorExitClearance + wallThickness/2)\r\nelif elevatorPosition == 2:\t#middle\r\n\txAxisEscalator = elevatorLength/2 + elevatorExitClearance + minPathWidth + escExitClearance + wallThickness/2 # +- for both sides\r\n\toccupiedXSpaceElevator = (xAxisCenter - elevatorLength/2 - elevatorExitClearance - minPathWidth, xAxisCenter + elevatorLength/2 + elevatorExitClearance + minPathWidth)\r\nelif elevatorPosition == 3:\t#right\r\n\txAxisEscalator =  minPathWidth + escExitClearance + wallThickness/2\r\n\txAxisCenter -= elevatorLength\t\r\n\toccupiedXSpaceElevator = (length - elevatorLength - elevatorExitClearance - wallThickness/2, length)\t\r\n\r\n# Parameters dependant on escalator orientation (True: Facing Inwards; False: Outwards)\r\nif escOrientation:\r\n\trevitApiOrientationOffsetLeft = 0\r\n\trevitApiOrientationOffsetRight = revitApiEscalatorWidth\r\n\trotationAngle = 0\r\n\twallOrientation = 1\r\nelse:\r\n\trevitApiOrientationOffsetLeft = revitApiEscalatorWidth\r\n\trevitApiOrientationOffsetRight = 0\r\n\trotationAngle = math.pi\r\n\twallOrientation = -1\r\n\txAxisEscalator += escalatorLength \r\n\r\nrevitApiEscalatorXStartRight = UnitUtils.ConvertToInternalUnits(xAxisCenter + xAxisEscalator, DisplayUnitType.DUT_METERS)\r\nrevitApiEscalatorXStartLeft  = UnitUtils.ConvertToInternalUnits(xAxisCenter - xAxisEscalator, DisplayUnitType.DUT_METERS)\r\n\r\n# Placements\r\nfor yIndex in range(platformCount):\r\n\tyAxis = yAxisList[yIndex] # Bottom Edge of the Platform #PlatformyAxis\r\n\tescalatorYStart = yAxis+ minDistToEdge \t\t\t\t\t\t \r\n\trevitApiEscalatorYStart = UnitUtils.ConvertToInternalUnits(escalatorYStart, DisplayUnitType.DUT_METERS)\r\n\t\r\n# Elevators\r\n\t# Start is bottom left point\r\n\tif elevatorPosition == 1:\r\n\t\trevitApiElevatorXStart = 0\t\r\n\telif elevatorPosition == 2:\r\n\t\trevitApiElevatorXStart = revitApiLength/2 - revitApiElevatorLength/2\r\n\telif elevatorPosition == 3: \r\n\t\trevitApiElevatorXStart = revitApiLength - revitApiElevatorLength\r\n\t\t\t\t\r\n\t# place the elevator in the middle of the platform\r\n\trevitApiDistanceToPlatformAxis = (revitApiPlatformWidth - revitApiElevatorLength)/2\t\t\t\t\t\t\t\t\t\t\r\n\trevitApiElevatorYStart = UnitUtils.ConvertToInternalUnits(yAxis, DisplayUnitType.DUT_METERS) + revitApiDistanceToPlatformAxis\r\n\t\t\t\r\n\t# Create Elevator walls \r\n\tpoint1 = XYZ(revitApiElevatorXStart, revitApiElevatorYStart, 0)\r\n\tpoint2 = XYZ(revitApiElevatorXStart + revitApiElevatorLength, revitApiElevatorYStart, 0)\r\n\tpoint3 = XYZ(revitApiElevatorXStart, revitApiElevatorYStart + revitApiElevatorLength, 0)\r\n\tpoint4 = XYZ(revitApiElevatorXStart + revitApiElevatorLength, revitApiElevatorYStart + revitApiElevatorLength, 0)\r\n\t\r\n\tline1 = Autodesk.Revit.DB.Line.CreateBound(point1, point2)\r\n\tline2 = Autodesk.Revit.DB.Line.CreateBound(point1, point3)\r\n\tline3 = Autodesk.Revit.DB.Line.CreateBound(point2, point4)\r\n\tline4 = Autodesk.Revit.DB.Line.CreateBound(point3, point4)\r\n\t\r\n\twall1 = Autodesk.Revit.DB.Wall.Create(doc, line1, wallType.Id, levelList[0].Id, (revitApiWallHeight*numberOfLevels)-revitApiPlatformHeight, -revitApiPlatformHeight, False, False)\r\n\twall2 = Autodesk.Revit.DB.Wall.Create(doc, line2, wallType.Id, levelList[0].Id, (revitApiWallHeight*numberOfLevels)-revitApiPlatformHeight, -revitApiPlatformHeight, False, False)\r\n\twall3 = Autodesk.Revit.DB.Wall.Create(doc, line3, wallType.Id, levelList[0].Id, (revitApiWallHeight*numberOfLevels)-revitApiPlatformHeight, -revitApiPlatformHeight, False, False)\r\n\twall4 = Autodesk.Revit.DB.Wall.Create(doc, line4, wallType.Id, levelList[0].Id, (revitApiWallHeight*numberOfLevels)-revitApiPlatformHeight, -revitApiPlatformHeight, False, False)\r\n\r\n\t#Opening\r\n\tif numberOfLevels > 1:\r\n\t\tcarray = CurveArray()\r\n\t\tcarray.Append(line1)\r\n\t\tcarray.Append(line2)\r\n\t\tcarray.Append(line3)\r\n\t\tcarray.Append(line4)\t\r\n\tfor level in range(1, numberOfLevels):\r\n\t\topening = doc.Create.NewOpening(floorList[level], carray, False)\r\n\t\r\n#Escalators\r\n\tfor level in range(0,numberOfLevels - 1):\r\n\t\tfor number in range(0, numberOfEscalators):\r\n\t\t\t#left\r\n\t\t\tescPoint = XYZ(revitApiEscalatorXStartLeft ,revitApiEscalatorYStart + revitApiOrientationOffsetLeft , revitApiPlatformHeight + level * revitApiWallHeight)\r\n\t\t\tescalator = doc.Create.NewFamilyInstance(escPoint, escalatorType, levelList[level], Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tescalatorList.append(escalator)\r\n\t\t\tZRotateInstance((math.pi/2) + rotationAngle, escalator, escPoint)\r\n\t\t\t\r\n\t\t\t#right\r\n\t\t\tescPoint = XYZ(revitApiEscalatorXStartRight ,revitApiEscalatorYStart + revitApiOrientationOffsetRight , revitApiPlatformHeight + level * revitApiWallHeight)\r\n\t\t\tescalator = doc.Create.NewFamilyInstance(escPoint, escalatorType, levelList[level], Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tescalatorList.append(escalator)\r\n\t\t\tZRotateInstance((-math.pi/2) + rotationAngle, escalator, escPoint)\r\n\t\t\t\r\n\t\t\t#offset for next iteration\r\n\t\t\trevitApiEscalatorYStart += revitApiEscalatorWidth\r\n\t\r\n\t\t\t#Stairs\r\n\t\t\tif (number == numberOfEscalators - 1) and (numberOfStairs > 0):\t\t\r\n\t\t\t\t#left\r\n\t\t\t\tstairPoint = XYZ(revitApiEscalatorXStartLeft, revitApiEscalatorYStart + revitApiStairWidth /2 , revitApiPlatformHeight + level * revitApiWallHeight)\r\n\t\t\t\tstairs = doc.Create.NewFamilyInstance(stairPoint, stairType, levelList[level], Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\t\tstairs.GetParameters(\"Top Offset\")[0].Set(revitApiWallHeight)\r\n\t\t\t\tstairs.GetParameters(\"Step Width\")[0].Set(revitApiStairWidth)\r\n\t\t\t\tstairs.LookupParameter(\"accu_rate_type\").Set(\"Stair\")\r\n\t\t\t\tZRotateInstance(math.pi*2.5 + rotationAngle, stairs, stairPoint)\r\n\t\t\t\tdelta = revitApiEscalatorLength - stairs.LookupParameter(\"Run Length\").AsDouble()\r\n\t\t\t\tElementTransformUtils.MoveElement(doc, stairs.Id, XYZ(-delta * wallOrientation, 0 , 0))\t\t\t\r\n\t\t\t\t#right\r\n\t\t\t\tstairPoint = XYZ(revitApiEscalatorXStartRight + delta * wallOrientation, revitApiEscalatorYStart + revitApiStairWidth /2 , revitApiPlatformHeight + level * revitApiWallHeight)\r\n\t\t\t\tstairs = doc.Create.NewFamilyInstance(stairPoint, stairType, levelList[level], Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\t\tstairs.GetParameters(\"Top Offset\")[0].Set(revitApiWallHeight)\r\n\t\t\t\tstairs.GetParameters(\"Step Width\")[0].Set(revitApiStairWidth)\r\n\t\t\t\tstairs.LookupParameter(\"accu_rate_type\").Set(\"Stair\")\r\n\t\t\t\tZRotateInstance(math.pi*1.5 + rotationAngle, stairs, stairPoint)\r\n\t\t\telse:\r\n\t\t\t\tdelta = 0\r\n\r\n\t\trevitApiEscalatorYStart -= revitApiEscalatorWidth*numberOfEscalators\t\r\n\t\t\r\n\t#Holes for the Escalators\r\n\tfor level in range(1, numberOfLevels):\r\n\t\tholeYStart = revitApiEscalatorYStart \r\n\t\tholeYEnd = revitApiEscalatorYStart + numberOfEscalators * revitApiEscalatorWidth + numberOfStairs * revitApiStairWidth\r\n\t\tif level == numberOfLevels -1:\r\n\t\t\tnumberOfStairs2 = 0\r\n\t\t\tdelta = 0\r\n\t\telse:\r\n\t\t\tnumberOfStairs2 = numberOfStairs\r\n\t\t#left\r\n\t\tholePoint1 = XYZ(revitApiEscalatorXStartLeft, holeYStart, level * revitApiWallHeight)\r\n\t\tholePoint2 = XYZ(revitApiEscalatorXStartLeft - revitApiEscalatorLength * wallOrientation, holeYStart, level * revitApiWallHeight)\r\n\t\tholePoint3 = XYZ(revitApiEscalatorXStartLeft - revitApiEscalatorLength * wallOrientation, holeYEnd , level * revitApiWallHeight)\r\n\t\tholePoint4 = XYZ(revitApiEscalatorXStartLeft - delta * wallOrientation, holeYEnd, level * revitApiWallHeight)\r\n\t\tholePoint5 = XYZ(revitApiEscalatorXStartLeft - delta * wallOrientation, holeYEnd - numberOfStairs2 * revitApiStairWidth, level * revitApiWallHeight)\r\n\t\tholePoint6 = XYZ(revitApiEscalatorXStartLeft, holeYEnd - numberOfStairs2 * revitApiStairWidth, level * revitApiWallHeight)\r\n\t\t\r\n\t\tholeLine1 = Autodesk.Revit.DB.Line.CreateBound(holePoint1, holePoint2)\r\n\t\tholeLine2 = Autodesk.Revit.DB.Line.CreateBound(holePoint2, holePoint3)\r\n\t\tholeLine3 = Autodesk.Revit.DB.Line.CreateBound(holePoint3, holePoint4)\r\n\t\tif numberOfStairs == 1 and level < numberOfLevels -1:\r\n\t\t\tholeLine4 = Autodesk.Revit.DB.Line.CreateBound(holePoint4, holePoint5)\r\n\t\t\tholeLine5 = Autodesk.Revit.DB.Line.CreateBound(holePoint5, holePoint6)\r\n\t\tholeLine6 = Autodesk.Revit.DB.Line.CreateBound(holePoint6, holePoint1)\r\n\t\t\r\n\t\tcarray = CurveArray()\t\r\n\t\tcarray.Append(holeLine1)\r\n\t\tcarray.Append(holeLine2)\r\n\t\tcarray.Append(holeLine3)\r\n\t\tif numberOfStairs == 1 and level < numberOfLevels -1:\r\n\t\t\tcarray.Append(holeLine4)\r\n\t\t\tcarray.Append(holeLine5)\r\n\t\tcarray.Append(holeLine6)\r\n\t\tdoc.Create.NewOpening(floorList[level], carray, False)\r\n\t\tholeList.append(carray)\r\n\t\t#right \r\n\t\tholePoint1 = XYZ(revitApiEscalatorXStartRight, holeYStart, level * revitApiWallHeight)\r\n\t\tholePoint2 = XYZ(revitApiEscalatorXStartRight + revitApiEscalatorLength * wallOrientation, holeYStart, level * revitApiWallHeight)\r\n\t\tholePoint3 = XYZ(revitApiEscalatorXStartRight + revitApiEscalatorLength * wallOrientation, holeYEnd , level * revitApiWallHeight)\r\n\t\tholePoint4 = XYZ(revitApiEscalatorXStartRight + delta * wallOrientation, holeYEnd, level * revitApiWallHeight)\r\n\t\tholePoint5 = XYZ(revitApiEscalatorXStartRight + delta * wallOrientation, holeYEnd - numberOfStairs2 * revitApiStairWidth, level * revitApiWallHeight)\r\n\t\tholePoint6 = XYZ(revitApiEscalatorXStartRight, holeYEnd - numberOfStairs2 * revitApiStairWidth, level * revitApiWallHeight)\r\n\t\t\r\n\t\tholeLine1 = Autodesk.Revit.DB.Line.CreateBound(holePoint1, holePoint2)\r\n\t\tholeLine2 = Autodesk.Revit.DB.Line.CreateBound(holePoint2, holePoint3)\r\n\t\tholeLine3 = Autodesk.Revit.DB.Line.CreateBound(holePoint3, holePoint4)\r\n\t\tif numberOfStairs == 1 and level < numberOfLevels -1:\r\n\t\t\tholeLine4 = Autodesk.Revit.DB.Line.CreateBound(holePoint4, holePoint5)\r\n\t\t\tholeLine5 = Autodesk.Revit.DB.Line.CreateBound(holePoint5, holePoint6)\r\n\t\tholeLine6 = Autodesk.Revit.DB.Line.CreateBound(holePoint6, holePoint1)\r\n\t\t\r\n\t\tcarray = CurveArray()\r\n\t\tcarray.Append(holeLine1)\r\n\t\tcarray.Append(holeLine2)\r\n\t\tcarray.Append(holeLine3)\r\n\t\tif numberOfStairs == 1 and level < numberOfLevels -1:\r\n\t\t\tcarray.Append(holeLine4)\r\n\t\t\tcarray.Append(holeLine5)\r\n\t\tcarray.Append(holeLine6)\r\n\t\tdoc.Create.NewOpening(floorList[level], carray, False)\r\n\t\tholeList.append(carray)\r\n# Escalator parameter\r\nfor escalator in escalatorList:\r\n\tescalator.GetParameters(\"Top Offset\")[0].Set(revitApiWallHeight)\r\n\tescalator.LookupParameter(\"accu_rate_type\").Set(\"Escalator\")\r\n\tescalator.LookupParameter(\"tread_width\").Set(treadWidth)\r\n\tescalator.LookupParameter(\"Lower Arrow\").Set(0)\r\n\tescalator.LookupParameter(\"Upper Arrow\").Set(0)\r\n\tescalator.LookupParameter(\"Clearence\").Set(0)\r\n# for columns \r\nif escOrientation:\r\n\toccupiedXSpaceEscalatorRight =  (xAxisCenter + xAxisEscalator - escExitClearance, xAxisCenter +  xAxisEscalator + escalatorLength)\r\n\toccupiedXSpaceEscalatorLeft = (xAxisCenter - xAxisEscalator - escalatorLength, xAxisCenter - xAxisEscalator + escExitClearance)\r\nelse:\r\n\toccupiedXSpaceEscalatorLeft =  (xAxisCenter - xAxisEscalator - escExitClearance, xAxisCenter -  xAxisEscalator + escalatorLength)\r\n\toccupiedXSpaceEscalatorRight = (xAxisCenter + xAxisEscalator - escalatorLength, xAxisCenter + xAxisEscalator + escExitClearance)\r\noccupiedXSpacesList = [occupiedXSpaceElevator, occupiedXSpaceEscalatorLeft, occupiedXSpaceEscalatorRight]\r\n\r\noccupiedYSpacesEscalator = (minDistToEdge, platformWidth - minDistToEdge)\r\noccupiedYSpaceElevator = (platformWidth/2 - elevatorLength/2, platformWidth/2 + elevatorLength/2)\r\noccupiedYSpacesList = [occupiedYSpaceElevator, occupiedYSpacesEscalator]\r\n\r\n# place walls around the escalator holes platformCount*numberOfLevels\r\nif numberOfLevels ==4:\r\n\thList = holeList[numberOfLevels::(numberOfLevels-1)*2] + holeList[numberOfLevels+1::(numberOfLevels-1)*2]\r\nelif numberOfLevels == 3:\r\n\thList = holeList[numberOfLevels::(numberOfLevels-1)*2] + holeList[numberOfLevels-1::(numberOfLevels-1)*2]\r\nelse:\r\n\thList = holeList\r\n\r\nfor carray in hList:\r\n\t# don't place walls in front if the escalator\r\n\tfor i in range(0, 4):\r\n\t\tfor k in range(1, numberOfLevels):\r\n\t\t\tlevel2 = UnwrapElement(levelList[k])\r\n\t\t\tif (i == 3 and escOrientation == 1 and k == numberOfLevels -1) or (i == 3 and escOrientation == 0 and k == numberOfLevels -1) or i ==2 or i==0:\r\n\t\t\t\tline = carray[i]\r\n\t\t\t\twall = Autodesk.Revit.DB.Wall.Create(doc, line, wallType.Id, level2.Id, 3.3, 0, False, False)\r\n\t\t\t\tif i == 2:\r\n\t\t\t\t\twall.Location.Move(XYZ(0, wallType.Width/2, 0))\r\n\t\t\t\telif i == 0:\r\n\t\t\t\t\twall.Location.Move(XYZ(0, -wallType.Width/2, 0))\t\t\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\n#columns\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\ncolumnWidth = 0.75 #[m]\r\nsafetyStripWidth += (0.9 + columnWidth/2) # 0.9 m Ril 813.0201A04 3(3) for small obstacles\r\nrevitApiFloorThickness = UnitUtils.ConvertToInternalUnits(0.2, DisplayUnitType.DUT_METERS)\r\n\r\nif columnRows > 0:\r\n\tcolumnCountLeft  = int( math.floor(xAxisCenter / columnSpacing)) #split because xAxisCenter not always in the middle and columns should be center orientated\r\n\tcolumnCountRight = int( math.floor((length - xAxisCenter)/ columnSpacing) + 1)\r\n\tcolumnStartX = xAxisCenter - columnCountLeft * columnSpacing\r\n\tcolumnXListBefore = []\r\n\tfor i in range(0,(columnCountLeft + columnCountRight)):\r\n\t\tcolumnXListBefore.append(i * columnSpacing + columnStartX)\r\n\r\n\t# Clash detection with occupiedYSpaces; only for escalators\r\n\toccupiedXSpacesColumnList = list(occupiedXSpacesList)\r\n\tif columnRows > 1:\r\n\t\tif occupiedYSpacesList[1][0] > (safetyStripWidth + columnWidth/2) and occupiedYSpacesList[1][1] > (platformCount - (safetyStripWidth + columnWidth/2)):\r\n\t\t\tdel occupiedXSpacesColumnList[1:3]\r\n\r\n\t# Clash detection with occupiedXSpaces\r\n\tcolumnXList = [] \r\n\tfor x in columnXListBefore:\r\n\t\ti = 0\r\n\t\tfor space in occupiedXSpacesColumnList:\r\n\t\t\tif not(x > space[0] and x < space[1]):\r\n\t\t\t\ti += 1\r\n\t\t\tif i == len(occupiedXSpacesColumnList):\r\n\t\t\t\tcolumnXList.append(x)\r\n\t# YAxis\r\n\tcolumnYList = []\r\n\tfor p in range(platformCount):\r\n\t\tif columnRows == 2:\r\n\t\t\tcolumnYList.append(yAxisList[p] + safetyStripWidth)\r\n\t\t\tcolumnYList.append(yAxisList[p] + platformWidth - safetyStripWidth)\r\n\t\telif columnRows == 1:\r\n\t\t\tcolumnYList.append(yAxisList[p] + platformWidth/2)\r\n\t\t\t\r\n\tfor x in columnXList:\r\n\t\tfor y in columnYList:\r\n\t\t\trevitApiX = UnitUtils.ConvertToInternalUnits(x, DisplayUnitType.DUT_METERS)\r\n\t\t\trevitApiY = UnitUtils.ConvertToInternalUnits(y, DisplayUnitType.DUT_METERS)\r\n\t\t\tbasePoint = XYZ(revitApiX, revitApiY, 0)\r\n\t\t\ttopHeight = revitApiWallHeight - revitApiFloorThickness\r\n\t\t\tcolumn = doc.Create.NewFamilyInstance(basePoint, columnType,  levelEG, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tcolumn.LookupParameter(\"Enable Analytical Model\").Set(0)\r\n\t\t\tcolumn.LookupParameter(\"Top Offset\").Set(topHeight)\r\n\t\t\tcolumn.LookupParameter(\"Top Level\").Set(levelEG.Id)\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\n#Top Decoration\r\n####################################################################################################################################################################################\r\n####################################################################################################################################################################################\r\nrevitApiExitXOffset = UnitUtils.ConvertToInternalUnits(exitXOffset, DisplayUnitType.DUT_METERS)\r\nrevitApiTicketXOffset = UnitUtils.ConvertToInternalUnits(ticketXOffset, DisplayUnitType.DUT_METERS)\r\nrevitApiTicketWidth = UnitUtils.ConvertToInternalUnits(0.8, DisplayUnitType.DUT_METERS)\r\nrevitApiStoreWidth = UnitUtils.ConvertToInternalUnits(5, DisplayUnitType.DUT_METERS)\r\nrevitApiRailingHeight = UnitUtils.ConvertToInternalUnits(1.2, DisplayUnitType.DUT_METERS)\r\n\r\n# Define points where exits are inserted\r\nexitPoint1 = XYZ(revitApiExitXOffset, UnitUtils.ConvertToInternalUnits(7, DisplayUnitType.DUT_METERS), 0)\t# 7m = exitOffset in Y = inwards\r\nexitPoint2 = XYZ(revitApiLength - revitApiExitXOffset, UnitUtils.ConvertToInternalUnits(7, DisplayUnitType.DUT_METERS), 0)\r\nexitPoint3 = XYZ(revitApiLength - revitApiExitXOffset - revitApiEscalatorWidth, revitApiWidth - UnitUtils.ConvertToInternalUnits(7, DisplayUnitType.DUT_METERS), 0)\r\nexitPoint4 = XYZ(revitApiExitXOffset - revitApiEscalatorWidth, revitApiWidth - UnitUtils.ConvertToInternalUnits(7, DisplayUnitType.DUT_METERS), 0)\r\npointList = [exitPoint1, exitPoint2, exitPoint3, exitPoint4]\r\n\t\r\n# Start the transaction\r\ndecorationList = []\r\nif numberOfLevels > 1:\r\n\ttopLevel = list(levelList)[-2]\r\n\t\r\n\t# Place ATMs\r\n\taPoint1 = XYZ(UnitUtils.ConvertToInternalUnits(xAxisCenter, DisplayUnitType.DUT_METERS), 1, 0)\r\n\taPoint2 = XYZ(UnitUtils.ConvertToInternalUnits(xAxisCenter, DisplayUnitType.DUT_METERS), revitApiWidth - 3, 0)\r\n\taPointList = [aPoint1, aPoint2]\r\n\tatm = doc.Create.NewFamilyInstance(aPoint1, atmType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\tdecorationList.append(atm)\r\n\tatm = doc.Create.NewFamilyInstance(aPoint2, atmType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\tdecorationList.append(atm)\r\n\t\r\n\t# Place TIcketmachines\r\n\tfor point in aPointList:\r\n\t\tfor machineNr in range(0, nrOfMachines):\r\n\t\t\tmPoint = XYZ(point.X - machineNr*revitApiTicketWidth + revitApiTicketXOffset, point.Y, point.Z)\r\n\t\t\tmachine = doc.Create.NewFamilyInstance(mPoint, ticketType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tdecorationList.append(machine)\r\n\t\tfor machineNr in range(0, nrOfMachines):\r\n\t\t\tmPoint = XYZ(point.X + machineNr*revitApiTicketWidth - revitApiTicketXOffset, point.Y, point.Z)\r\n\t\t\tmachine = doc.Create.NewFamilyInstance(mPoint, ticketType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tdecorationList.append(machine)\r\n\t\t\t\r\n\t# Place Ticketvalidators\r\n\tif escOrientation:\r\n\t\txLeft  = occupiedXSpacesList[1][0] - escExitClearance\r\n\t\txRight = occupiedXSpacesList[2][1] + escExitClearance\r\n\t\tyLeft  = [revitApiEscalatorWidth * i + UnitUtils.ConvertToInternalUnits(occupiedYSpacesList[1][0], DisplayUnitType.DUT_METERS) for i in range(numberOfEscalators + 1)]\r\n\t\tyRight = [revitApiEscalatorWidth * i + revitApiEscalatorWidth + UnitUtils.ConvertToInternalUnits(occupiedYSpacesList[1][0], DisplayUnitType.DUT_METERS) for i in range(numberOfEscalators)]\r\n\t\tyRight.append(yRight[-1] + revitApiStairWidth)\r\n\telse:\r\n\t\txLeft  = occupiedXSpacesList[1][1] + escExitClearance\r\n\t\txRight = occupiedXSpacesList[2][0] - escExitClearance\r\n\t\tyRight = [revitApiEscalatorWidth * i + UnitUtils.ConvertToInternalUnits(occupiedYSpacesList[1][0], DisplayUnitType.DUT_METERS) for i in range(numberOfEscalators + 1)]\r\n\t\tyLeft  = [revitApiEscalatorWidth * i + revitApiEscalatorWidth + UnitUtils.ConvertToInternalUnits(occupiedYSpacesList[1][0], DisplayUnitType.DUT_METERS) for i in range(numberOfEscalators)]\r\n\t\tyLeft.append(yLeft[-1] + revitApiStairWidth)\r\n\tif numberOfStairs == 0:\r\n\t\tdel yRight[-1]\r\n\t\tdel yLeft[-1]\r\n\tfor baseY in revitApiYAxisList:\t\r\n\t\tfor y in range(len(yLeft)):\r\n\t\t\tpointLeft  = XYZ(UnitUtils.ConvertToInternalUnits(xLeft , DisplayUnitType.DUT_METERS), yLeft[y]  + baseY, 0)\r\n\t\t\tpointRight = XYZ(UnitUtils.ConvertToInternalUnits(xRight, DisplayUnitType.DUT_METERS), yRight[y] + baseY, 0)\r\n\t\t\tvalidatorLeft  = doc.Create.NewFamilyInstance(pointLeft , validatorType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tvalidatorRight = doc.Create.NewFamilyInstance(pointRight, validatorType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tdecorationList.append(validatorLeft)\r\n\t\t\tdecorationList.append(validatorRight)\r\n\t\t\r\n\t# place escalators as exits + ticketmachines\r\n\tfor exitNumber in range(0, numberOfExits):\r\n\t\tescalator = doc.Create.NewFamilyInstance(pointList[exitNumber], escalatorType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\tescalator.LookupParameter(\"accu_rate_type\").Set(\"Escalator\")\r\n\t\tescalator.LookupParameter(\"tread_width\").Set(treadWidth)\r\n\t\tescalator.LookupParameter(\"Lower Arrow\").Set(0)\r\n\t\tescalator.LookupParameter(\"Upper Arrow\").Set(0)\r\n\t\tescalator.LookupParameter(\"Clearence\").Set(0)\r\n\t\t\r\n\t\tstairPoint = XYZ(pointList[exitNumber].X + revitApiStairWidth/2, pointList[exitNumber].Y, 0)\r\n\t\tstairs = doc.Create.NewFamilyInstance(stairPoint, stairType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\tstairs.GetParameters(\"Step Width\")[0].Set(revitApiStairWidth)\r\n\t\tstairs.LookupParameter(\"accu_rate_type\").Set(\"Stair\")\r\n\r\n\t\tdelta = (escalator.LookupParameter(\"Length\").AsDouble() - UnitUtils.ConvertToInternalUnits(1.7, DisplayUnitType.DUT_METERS)) #beginning of the surface slab (abs)\r\n\t\tsurfaceSlabMeasure = UnitUtils.ConvertToInternalUnits(6, DisplayUnitType.DUT_METERS) #Arbitrary\r\n\t\t\r\n\t\tif exitNumber<2:\t\r\n\t\t\tfloorYOffset  = - delta\r\n\t\t\tfloorYOffset2 = - surfaceSlabMeasure\r\n\t\t\tZRotateInstance(math.pi, escalator, pointList[exitNumber])\r\n\t\t\tZRotateInstance(math.pi, stairs, stairPoint)\r\n\t\t\tstairs.Location.Move(XYZ(0, floorYOffset + stairs.LookupParameter(\"Run Length\").AsDouble() , 0))\r\n\t\t\t\t\r\n\t\t\t#create the opening in the wall\r\n\t\t\to1 = XYZ(pointList[exitNumber].X + revitApiStairWidth, 0,  UnitUtils.ConvertToInternalUnits(1.17, DisplayUnitType.DUT_METERS) + revitApiWallHeight * (numberOfLevels - 1))\r\n\t\t\to2 = XYZ(pointList[exitNumber].X - revitApiEscalatorWidth, 0, UnitUtils.ConvertToInternalUnits(5, DisplayUnitType.DUT_METERS) + revitApiWallHeight * (numberOfLevels))\r\n\t\t\topening = doc.Create.NewOpening(UnwrapElement(wallList[0]), o1, o2)\r\n\t\t\t\r\n\t\t\t# place storebooths\r\n\t\t\tif exitNumber == 1:\r\n\t\t\t\tbpoint = XYZ(pointList[exitNumber].X - revitApiStoreWidth - revitApiEscalatorWidth - 30, 1, 0)\r\n\t\t\telse:\r\n\t\t\t\tbpoint = XYZ(pointList[exitNumber].X + revitApiEscalatorWidth + 30, 1, 0)\r\n\t\t\tstoreBooth = doc.Create.NewFamilyInstance(bpoint, storeType, topLevel, Autodesk.Revit.DB.Structure.StructuralType.NonStructural)\r\n\t\t\tdecorationList.append(storeBooth)\t\t\t\r\n\t\telse:\r\n\t\t\tfloorYOffset  = delta\r\n\t\t\tfloorYOffset2 = surfaceSlabMeasure\r\n\t\t\tstairs.Location.Move(XYZ(revitApiEscalatorWidth, floorYOffset - stairs.LookupParameter(\"Run Length\").AsDouble() , 0))\r\n\t\t\t\r\n\t\t\t#create the opening in the wall\r\n\t\t\to1 = XYZ(pointList[exitNumber].X, 0, UnitUtils.ConvertToInternalUnits(1, DisplayUnitType.DUT_METERS) + revitApiWallHeight * (numberOfLevels - 1))\r\n\t\t\to2 = XYZ(pointList[exitNumber].X + revitApiEscalatorWidth + revitApiStairWidth, 0, UnitUtils.ConvertToInternalUnits(5, DisplayUnitType.DUT_METERS) + revitApiWallHeight*(numberOfLevels))\r\n\t\t\topening = doc.Create.NewOpening(UnwrapElement(wallList[2]), o1, o2)\r\n\t\t\r\n\t\t#Surface slab\r\n\t\tpoint1 = XYZ(pointList[exitNumber].X - surfaceSlabMeasure, pointList[exitNumber].Y + floorYOffset, (numberOfLevels - 1) * revitApiWallHeight + UnitUtils.ConvertToInternalUnits(4.5, DisplayUnitType.DUT_METERS))\r\n\t\tpoint2 = XYZ(pointList[exitNumber].X + surfaceSlabMeasure, pointList[exitNumber].Y + floorYOffset, (numberOfLevels - 1) * revitApiWallHeight + UnitUtils.ConvertToInternalUnits(4.5, DisplayUnitType.DUT_METERS))\r\n\t\tpoint3 = XYZ(pointList[exitNumber].X + surfaceSlabMeasure, pointList[exitNumber].Y + floorYOffset + floorYOffset2, (numberOfLevels - 1) * revitApiWallHeight + UnitUtils.ConvertToInternalUnits(4.5, DisplayUnitType.DUT_METERS))\r\n\t\tpoint4 = XYZ(pointList[exitNumber].X - surfaceSlabMeasure, pointList[exitNumber].Y + floorYOffset + floorYOffset2, (numberOfLevels - 1) * revitApiWallHeight + UnitUtils.ConvertToInternalUnits(4.5, DisplayUnitType.DUT_METERS))\r\n\t\tline1 = Autodesk.Revit.DB.Line.CreateBound(point1, point2)\r\n\t\tline2 = Autodesk.Revit.DB.Line.CreateBound(point2, point3)\r\n\t\tline3 = Autodesk.Revit.DB.Line.CreateBound(point3, point4)\r\n\t\tline4 = Autodesk.Revit.DB.Line.CreateBound(point4, point1)\r\n\t\tcarray = CurveArray()\r\n\t\tcarray.Append(line1)\r\n\t\tcarray.Append(line2)\r\n\t\tcarray.Append(line3)\r\n\t\tcarray.Append(line4)\r\n\t\tfloor = doc.Create.NewFloor(carray, floorType, list(levelList)[-1], False)\r\n\t\tfloor.LookupParameter(\"accu_rate_type\").Set(\"Destination\")\t\r\n\r\n#End Transaction\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Assign your output to the OUT variable.\r\noutput = IN[0]\r\noutput[0].append(xAxisCenter)\r\noutput[3].append(occupiedXSpacesList)\r\noutput[3].append(occupiedYSpacesList)\r\noutput[3].append(decorationList)\r\nOUT = output\r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5e46294564674e7d8151f3a2a1c328fa",
      "Inputs": [
        {
          "Id": "08a597458f414f65a0f3d49535df3416",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19548bb122024254b787e58c96f9d4f3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# This script takes the langth of the train and converts it to a platform length, according to officlaa guidelines from DB\r\n# It doesn't include cases of locomotive-hauled trains\r\nlength = IN[0]\r\nterminus = IN[1]\r\nbumper = IN[2]\r\nstandard_length = IN[3]\r\ntrain_freq = IN[4]\r\n# stanard buffer-legnth is 5 (Maß  für ungenaues halten)\r\nbuffer = 5\r\n# Check if the station is a terminus\r\nif terminus == False:\r\n\tlength = length + buffer\r\nelse:\r\n\tlength = length + buffer + bumper\r\n\r\n# This check if the length is within a certain range\r\nif standard_length == True:\r\n\tif length >= 60 and length < 90:\r\n\t\tlength = 90\r\n\telif length >= 90 and length < 140:\r\n\t\tlength = 140\r\n\telif length >= 140 and length < 170:\r\n\t\tlength = 170\r\n\telif length >= 170 and length < 210:\r\n\t\tlength = 210\r\n\telif length >= 210 and length < 280:\r\n\t\tlength = 280\r\n\telif length >= 280 and length < 320:\r\n\t\tlength = 320\r\n\telif length >= 320 and length < 370:\r\n\t\tlength = 370\r\n\telif length >=370 and length < 405:\r\n\t\tlength = 405\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = length",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "6f587da72e1149979c6a2c4c9f2c0d40",
      "Inputs": [
        {
          "Id": "94736aca592a42159035118e9bd60aa0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd4dc8b63f5c4a7ab573e1e1ad4959e3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c59e8c4b465d4d638cd2727b4e68dd34",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66d99352aafb4c61b307f1b9d065a245",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bd1986587e6453a93efc48ad8e4c674",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed3a6a754c09495a88c4ef637f16388c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "f720c80e6f1d4f21bebdcb9555f2933e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6062cb01d866449c9a333bed72805252",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 115.0,
      "Id": "3cb6533b3fa5459f9123ae291f780de2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abaaf6230eea490992861ca1bfdabf08",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Erstellt eine Zahl."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 10.0,
      "Id": "2f3255ccafbc41a380f658fde805b3c4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80de50804edc41adbea43dfcfe200c07",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Erstellt eine Zahl."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "7b33e5c900614f629567cf0acb30494b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a37c7b8b3534e6b9729f187e935e3f2",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Inputs\r\nv = IN[0]\r\nplatformHeight = IN[1]\r\nL_b = IN[2]\r\ntrafficLevel = IN[3]\r\nlocalTraffic = IN[4]\r\nnumberOfEscalators = IN[5]\r\nnumberOfStairs = IN[6]\r\nelevatorLength = IN[7]\r\nregional = IN[8]\r\n\r\nstairWidth = IN[13]\t#[m]\r\nescalatorWidth = IN[12]\r\nescalatorLength = 25 #[m]\r\n\r\n#########################################################################\r\n#########################################################################\r\n#functions\r\n#########################################################################\r\n#########################################################################\r\ndef checkDistances(length, width, bs, platformWidth):\r\n\tif length < 1:\r\n\t\tdist = 2*bs + 2*0.9\r\n\t\tif dist < 1.6:\r\n\t\t\tdist = 2\r\n\t\t\r\n\t\tif platformWidth < (width + dist):\r\n\t\t\tplatformWidth = (width + dist)\r\n\tif length > 1 and length <= 10:\r\n\t\tdist = 2*bs + 2*1.2\r\n\t\tif dist < 2:\r\n\t\t\tdist = 2\r\n\t\t\r\n\t\tif platformWidth < (width + dist):\r\n\t\t\tplatformWidth = (width + dist)\r\n\tif length > 10:\r\n\t\tdist = 2*bs + 2*1.6\r\n\t\tif dist < 2.4:\r\n\t\t\tdist = 2.4\r\n\t\t\r\n\t\tif platformWidth < (width + dist):\r\n\t\t\tplatformWidth = (width + dist)\r\n\treturn platformWidth\r\n#########################################################################\r\n#########################################################################\r\n#Width calculation\r\n#########################################################################\r\n#########################################################################\r\nif IN[10] == False:\r\n\t# Calculation \"Einbaumaß\" aBa, aBi (813.0201A03)\r\n\taBa = 1.7 #backup value\r\n\t\r\n\tif platformHeight == 0.960:\r\n\t\taBa = 1.685\r\n\telif platformHeight == 0.760:\r\n\t\taBa = 1.675\r\n\telif platformHeight == 0.550:\r\n\t\taBa = 1.670\r\n\telif platformHeight == 0.380:\r\n\t\taBa = 1.690\r\n\t# velocity check \"Gefahrenbereich\" (813.0201 3(9) )\r\n\tif v <= 160:\r\n\t\tbs = 2.5 - aBa\r\n\telif v > 160 & v <= 200:\r\n\t\tbs = 3 - aBa\r\n\telse:\r\n\t\tbs = 3.7 - aBa\r\n\t#min is the minimum platform width\r\n\tplatformWidth = 2*bs + 2*0.8\r\n\t#check for obstructions (813.0201A04 p. 5-8)\r\n\tplatformWidth = checkDistances(elevatorLength, elevatorLength, bs, platformWidth)\r\n\tplatformWidth = checkDistances(escalatorLength, numberOfStairs * stairWidth + numberOfEscalators * escalatorWidth, bs, platformWidth)\r\n\t# min width (813.0201A04 2(2) )\r\n\tif platformWidth < 3.3:\r\n\t\tplatformWidth = 3.3\r\nelse:\r\n\tplatformWidth = IN[11]\r\n\t\r\ndistTrackPlatform = aBa\r\nif v <= 160:\r\n\tdangerZone = 2.5 #[m]\t# Gefahrenbereich Lichtraumprofil\r\nelse:\r\n\tdangerZone = 3.0 \r\n\t\r\ndistTracks = IN[9]\t #[m]\t# Werte nach EBO §10 und Ril 800.0130\r\nouterTrack = dangerZone + distTrackPlatform\r\ninnerTracks = 2 * distTrackPlatform + distTracks\r\nsafetyStripPlatform = bs\r\n#########################################################################\r\n#########################################################################\r\n#detailed calculation\r\n#########################################################################\r\n#########################################################################\r\n# Caclulation of b_mittel (813.0201A05)\r\n#Q_a = 1\r\n#Q_e = 1\r\n#n_b = 2\r\n\r\n#813.0201 A05 p. 2/3\r\n#if trafficLevel == 1:\r\n#\tif localTraffic == True:\r\n#\t\td_v = 0.5\r\n#\t\td_as = 1.5\r\n#\telse:\r\n#\t\td_v = 0.3\r\n#\t\td_as = 1\r\n#elif trafficLevel == 2:\r\n#\tif localTraffic == True:\r\n#\t\td_v = 1\r\n#\t\td_as = 2.5\r\n#\telse:\r\n#\t\td_v = 0.8\r\n#\t\td_as = 2\r\n#elif trafficLevel == 3:\r\n#\td_v = 1\r\n#\td_as = 2.5\r\n\t\t\r\n# calc A_as\r\n#A_w = Q_e / d_as\r\n#l_access = 1\r\n#w_access = 1\r\n#A_access = l_access * w_access\r\n#l_storage = 2\r\n#w_storage = 2.5 #813.0202 Abs 8 (7)\r\n#A_storage = l_storage * w_storage\r\n#nr_escalators = IN[5] * 2\r\n#w_stairs = nr_escalators * 1.8 # with of escalators\r\n#l_stairs = 1.5 #813.0202, Abs. 5/5 6/5\r\n#A_stairs = l_stairs * w_stairs\r\n#A_service = 10\r\n\r\n#A_as = A_w + A_access + A_storage + A_stairs + A_service\r\n\r\n#b_mean = (Q_a/(L_b*d_v)) + (Q_e/(L_b*d_as)) + (A_as/L_b) + n_b * bs\r\n#########################################################################\r\n#########################################################################\r\n# Assign your output to the OUT variable.\r\nOUT = platformWidth, platformHeight, trafficLevel, regional, outerTrack, innerTracks, distTracks, distTrackPlatform, dangerZone, safetyStripPlatform",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "af774d71e51647caae282fc088bf06bb",
      "Inputs": [
        {
          "Id": "cdebd4fa74a1498f8979027fabe97bfb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66caa2cdacdc49d9b496f77217253990",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a667bc430d1487494522b182c28b37a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e51c0990fb9e4fae9d29cf555014c2d6",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3829441d66e946ec82bdd321ac57691f",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05ad15395ca14aed9df1f414f3f76f23",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f97a8999d554d1da0d6e915ed19c14a",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29561ad3f79f4a77913bffc9ccf48eb6",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d59a402367840c98132474ad1e90c1f",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ccbaad2d90ed458399ee27dcf8a7277f",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08c938a77a284acb8817538a14186f0a",
          "Name": "IN[10]",
          "Description": "Input #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16b0f9a0c24047f78d3c9d42d62e6c18",
          "Name": "IN[11]",
          "Description": "Input #11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "314e14a12fdc49f29f76991b258ef613",
          "Name": "IN[12]",
          "Description": "Input #12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2410259915be43ac9623e7086ae5b07a",
          "Name": "IN[13]",
          "Description": "Input #13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15ddd1f9c5c54f29b02ed6fddad84f98",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 3.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "InputValue": 1.0,
      "Id": "3949bf9b3e7a4dcfb52c38c63d41f89c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cbf5cc635b0d4381842bd1ab4e83de78",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "2122344a6c6c4f5e900634e71d62c5eb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2e981f7c2bb64f1d85493f8c0ecd0bdc",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10.0,
      "MinimumValue": 6.0,
      "StepValue": 0.5,
      "InputValue": 6.0,
      "Id": "859c366329bb4d16875a776dac8f000a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b4b69dec30e439b839b0b8aba428a52",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 230.0,
      "MinimumValue": 10.0,
      "StepValue": 10.0,
      "InputValue": 100.0,
      "Id": "04530e04386248d3a3affe3762d7660b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c7e5e94608a64df095aab7a895b1f1ef",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 15.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "InputValue": 3.0,
      "Id": "b420fc1637f44fc5a6fd8e9929a525df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8fe2ca711e1f4a4a8a09cfe249ee815e",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 3.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "InputValue": 2.0,
      "Id": "d5fd982584d446088314965fc077506a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "43684ba876684d278f1edd08f40df9b4",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 6,
      "SelectedString": "ATM:ATM",
      "NodeType": "ExtensionNode",
      "Id": "764f7e4dd112489fab080cb3a02a11f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ee348c6aabb4256867cfecded10c5cd",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 33,
      "SelectedString": "Ticketmachine:Ticketmachine",
      "NodeType": "ExtensionNode",
      "Id": "a7e8c75ff74c43c1b3ffb9bbdb322529",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d315704e7cec4220bdbec08f27818ba4",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 50.0,
      "MinimumValue": 5.0,
      "StepValue": 0.5,
      "InputValue": 20.0,
      "Id": "619194ee147a46bf869e3e6373ed406f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "552638be7b374455ae8ab53b85ea72f1",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 15.0,
      "MinimumValue": 3.0,
      "StepValue": 1.0,
      "InputValue": 7.0,
      "Id": "5f4f339b8e3e4864bf9f6a99777f8b4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "948d36e87d6749a0b83a45c33ff4ce78",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "e15d5903d5f94bfabbbc763e0f037f08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f730852870624c368487e690bdab275f",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 30,
      "SelectedString": "Storebooth:Storebooth",
      "NodeType": "ExtensionNode",
      "Id": "073e994e28f14c03b35614344fb596c3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cac4690f59024bf2b086d3a832f5c08e",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#Import Revit Nodes\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Architecture import *\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n\r\n# Other type etc. variables\r\nfloorType = UnwrapElement(IN[0])\r\nwallType = UnwrapElement(IN[1])\r\ncolumnType = UnwrapElement(IN[2])\r\nstairType = UnwrapElement(IN[3])\r\nescalatorType = UnwrapElement(IN[4])\r\ntrainType = UnwrapElement(IN[5])\r\ntrainWallType = UnwrapElement(IN[6])\r\natmType = UnwrapElement(IN[7])\r\nticketType = UnwrapElement(IN[8])\r\nstoreType = UnwrapElement(IN[9])\r\nvalidatorType = UnwrapElement(IN[10])\r\n\r\ntypeList = [floorType, wallType, columnType, stairType, escalatorType, trainType, trainWallType, atmType, ticketType, storeType, validatorType]\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n#Start Transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n\t\t\r\n# Activate the types before create family instance\r\nfor type in range(2,len(typeList)):\r\n\t\tif typeList[type].IsActive == False:\r\n\t\t\ttypeList[type].Activate()\r\n\t\t\tdoc.Regenerate\r\n# End Transaction\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = typeList\r\n\r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0bc8b8aefcb94b0f851e4c51d941ae82",
      "Inputs": [
        {
          "Id": "7ed1373472f64d34ae9b91b844d21271",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2ffa24a8d19403b8ae511ff9c4c4d52",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9f106b5f53a4c2db153f78670631d84",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6869c76d46d041009be42161378a9a22",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97ad01270b8c4751a8b1a66ff9a45438",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7faf4c334a15479ca52cd21d13b9ac50",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b75a513a18a2443e9e5b482d433dd3b0",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46a4a4a71956456494750a48b6eca36a",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f57123c7607148838f19305406aa29e4",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e864c454abb49d388c3f9ecc4ea181d",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65ab6c93d9c34ff19f1dcd2641da7a8d",
          "Name": "IN[10]",
          "Description": "Input #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8154bd0aa63a4bc6a06a9ba245626224",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 23,
      "SelectedString": "new_stairs:31/16 Ril 813.0202 5(3)",
      "NodeType": "ExtensionNode",
      "Id": "c227e785b58943edafa76525500a0bd7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4e24ef82048b44028aff57dc2f0a666e",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 32,
      "SelectedString": "Ticket_validator:Standard",
      "NodeType": "ExtensionNode",
      "Id": "b72ecce27dbf4e2cb0eee76b03dc336d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "966e76a808dc457aa437427052de2ea0",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "60a71154374945eeb0db2843f0f4b194",
      "Inputs": [
        {
          "Id": "c9359ab310644dc086eac78ab28cc4b2",
          "Name": "list",
          "Description": "Liste, aus der ein Element abgerufen werden soll\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c771ffd098194cc984325f2c5a9e9676",
          "Name": "index",
          "Description": "Index des abzurufenden Elements\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9e416f150ca477f8f408d9c658c002e",
          "Name": "item",
          "Description": "Element am angegebenen Index in der Liste",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gibt ein Element aus der angegebenen Liste an der Position des angegebenen Index zurück.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 1,
      "MaximumValue": 3,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "31a13685283c42b9add86dd57ed46c95",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "55de3ad9e11a4349a9922b8af3af16a5",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a=0.96;\nb=0.76;\nc=0.55;\nd=0.38;\nlist=[a,b,c,d];",
      "Id": "3c5c3fe74d5b41d4b4b801f168fe29d2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "986306dae7c844ce834b6ab886f56e6f",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "563f776082b746cd84117094ec4fe956",
          "Name": "",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "591eb7116e7242b98cc6a07a827060fd",
          "Name": "",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22008ce5aeb44a518fc67086f5088459",
          "Name": "",
          "Description": "d",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dacc02e4598484c911ef148311ea9be",
          "Name": "",
          "Description": "list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ermöglicht die direkte Erstellung von DesignScript-Code."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 1.0,
      "StepValue": 1.0,
      "InputValue": 100.0,
      "Id": "5d9828480221475baf6e48bad2b42525",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3a799cc98d0f410db77ca2597b636813",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "d087c5b10db143da9f71e77163911823",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1fa72074c51247d4910e1806030fab8b",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 50.0,
      "MinimumValue": 5.0,
      "StepValue": 5.0,
      "InputValue": 10.0,
      "Id": "c126dde365db4cc7a46bb27a6b30f6ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e19572f9037d46bd8f30b7520cd85231",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 1.1,
      "MinimumValue": 0.8,
      "StepValue": 0.1,
      "InputValue": 1.1,
      "Id": "3e49a6e7984843bcaf9cd979a140f65d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae5bc0821e9441b5891dd32272291838",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 22,
      "SelectedString": "IC_Walls:IC_Walls",
      "NodeType": "ExtensionNode",
      "Id": "8cde6c34c459454e9004058a26f28e9c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a59e80708ad645afaad9f814f734d994",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im Dokument verfügbaren Familientypen"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "7b90c8e74b004d8ca656aef26d3f8cfd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6033a5f85f334c4fb776e0c16b4ae024",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 8.0,
      "MinimumValue": 3.5,
      "StepValue": 0.1,
      "InputValue": 4.2,
      "Id": "bd1b00af5a374ae78a3db17b3cc8d4f5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4b8e3c57c9a9452fb16f3bdd0fa3f8a3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "5362827e790549c5b778bda177cd6bfd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "207a1fb498fa40f89444e9744bf923a8",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 30.0,
      "MinimumValue": 0.0,
      "StepValue": 0.05,
      "InputValue": 10.0,
      "Id": "b2c1f69647394f44a916f5bcb14b7bff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a27d7e77ab7435ba8fe804d489488d3",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 20.0,
      "MinimumValue": 2.0,
      "StepValue": 0.5,
      "InputValue": 6.0,
      "Id": "1df9694bdc1e411ca2ac7e2131f07671",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a35eb04cfbf644728344549c360d5a7c",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 6.0,
      "MinimumValue": 1.2,
      "StepValue": 0.6,
      "InputValue": 2.4,
      "Id": "4ba388afdb6f4a199c2adaf4d7e4f99c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3a09cf818c4b460cbd5fda45829eece0",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 2.0,
      "MinimumValue": 1.0,
      "StepValue": 0.1,
      "InputValue": 1.8,
      "Id": "072f17785abf4cc39dc5136a68b95710",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "629c161841ad43edb51f6634a3b0d556",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "escalatorExitClearance=2.5;\nstairExitClearance=1.5;\nelevatorExitClearance=1.5;\nlist=[escalatorExitClearance,\nstairExitClearance,\nelevatorExitClearance];",
      "Id": "876097dbc23944c9b6110b8939af53c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73c9581abf764ce49959b8639c263362",
          "Name": "",
          "Description": "escalatorExitClearance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dba755fe7b004b5a9630a287adfac4ff",
          "Name": "",
          "Description": "stairExitClearance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65abcee6bf794d6cad1d54aaf66ec83a",
          "Name": "",
          "Description": "elevatorExitClearance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "450779b2d2c44c0097e98feb350c5b2d",
          "Name": "",
          "Description": "list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ermöglicht die direkte Erstellung von DesignScript-Code."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 1,
      "MaximumValue": 1,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "2dc815a069a34ecd827e425ba9d48455",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6372d02a3d16452d94e9ed01bf3c69bc",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 3,
      "MaximumValue": 4,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "5549baa7f780455384ca099becc0b93e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34133f80ce7544b59c160eef703f7c5e",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2,
      "MaximumValue": 4,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "362a811f743d4f03a38ab35cc82d6377",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3aa8cb485fbf42db9c4ad0f9d3aa6b88",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 4,
      "MaximumValue": 8,
      "MinimumValue": 2,
      "StepValue": 1,
      "Id": "a23efd7c6d0f4301aaa00e4eba189874",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2668e6fe979844a48fe168791a48e88c",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 3,
      "MaximumValue": 4,
      "MinimumValue": 2,
      "StepValue": 1,
      "Id": "4b40e27ff785438dbe70b1ae9941cfd5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "035ebd166e89469ca54370bc7958b9d7",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 2,
      "MaximumValue": 3,
      "MinimumValue": 1,
      "StepValue": 1,
      "Id": "93dd3d42c8c4464fb90f83360efc52de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc8a6772f9b84ac3bc5c38263b478ee7",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung ganzzahliger Werte"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 20.0,
      "MinimumValue": 1.8,
      "StepValue": 0.1,
      "InputValue": 1.8,
      "Id": "5a57219466db46d29f2521ba7ebbc3fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1729df3e99654d36badfaa727c3ea9e8",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ein Schieberegler zur Erzeugung numerischer Werte"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "767cbce34ce6427e9a7f619a0bb4f935",
      "Inputs": [
        {
          "Id": "7b5eb51eefed43b5ac17505de7d87f67",
          "Name": "item",
          "Description": "Das hinzuzufügende Element. Dies kann ein Objekt oder eine Liste sein.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f90c08daa0d34091b05af87c23713ace",
          "Name": "list",
          "Description": "Liste, der das Element hinzugefügt werden soll\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4136017b87a541bca42c1019e704ba96",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fügt ein Element am Ende der Liste hinzu.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4afb43897b264e4bbb7f76c5701457a1",
      "Inputs": [
        {
          "Id": "c0c35cfd70394729a390e2d252ce7fc2",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fada0f3804b4eceb417996a9e2746ca",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47bc4fd5d01e4fff865cd5802d85cd06",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "600b50bf72a14777a2e274b8d21a9cab",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0f0889a88024757bcc5c6a7e391a19a",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "063101a45c3e4ca398535cbc91481c4d",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1e646faacbc458eafc72829db4b82c3",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee336fb1de8b4fefa7ceb7b92ecba990",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Erstellt eine neue Liste aus den angegebenen Eingaben."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "1661a82a791d4ef8aefdd38dc65c9189",
      "Inputs": [
        {
          "Id": "3b63db33461249a0880fed221a26fee1",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5123abf80ec41bf864f24584a36f9a5",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39db69ce132448b999ef58b7008685f7",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bfb5b09a34c4e168619ec2fbf9feeec",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b09b25e0cb85442d91900ac683549540",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93ae402c19a0452e81c79dca18292805",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47b3dacf2ac64748bbdb421d110d41af",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Erstellt eine neue Liste aus den angegebenen Eingaben."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "057219e7ac7943268312aa8bbe8cf431",
      "Inputs": [
        {
          "Id": "baee9d0decc94186a5bfdb48b9abbbd5",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28e30d74b1cb41c99c75fb109b48307b",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "626b0a42593f456caa490eadcced9044",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc6ea25e539d4257b1e1499290f7cf0f",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Erstellt eine neue Liste aus den angegebenen Eingaben."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e345f84b7c264af9b6dab424ebebf9c2",
      "Inputs": [
        {
          "Id": "1b327040b6964e26a9f5c2e4641d7892",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3aa5d11ff4444e428420af3b2e3cdd56",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6aefd4f5903246899db093c7d1491994",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Erstellt eine neue Liste aus den angegebenen Eingaben."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport os\r\nimport time\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#Import Revit Nodes\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Architecture import *\r\n\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"System\")\r\nfrom System.Collections.Generic import List\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nviewList = IN[0][0]\r\nviewColorList = IN[0][1]\r\npath = IN[1]\r\nfolderName = IN[3]\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n# Place your code below this line\r\n\r\nfloorTypes = FilteredElementCollector(doc).OfClass(ViewFamilyType).ToElements();\r\nfloorId = UnwrapElement( floorTypes[0]).Id\r\n\r\nif IN[2] and (IN[5] or IN[6] or IN[7] or IN[9] or IN[10]):\t\r\n\tif IN[4]:\r\n\t\tfolders = os.listdir(path)\r\n\t\tmaxNumber = -1\r\n\t\tfor folder in folders:\r\n\t\t\ttry:\r\n\t\t\t\tmaxNumber = max(int(folder.split(folderName)[1]),maxNumber)\r\n\t\t\texcept:\r\n\t\t\t\tprint(\"Folder Error\")\r\n\t\tmaxNumber += 1\r\n\t\tfolderName += str(maxNumber)\r\n\tpath= os.path.join(path, folderName)\r\n\tif not os.path.exists(path):\r\n\t\tos.makedirs(path)\r\n##########################################################################\r\n##########################################################################\r\n#View Export\r\n##########################################################################\r\n##########################################################################\r\nexportPath = path\r\nfileName = \"Test\"\r\nfilePath = os.path.join(exportPath, fileName)\r\n\r\nviewIdList = [view.Id for view in UnwrapElement(viewList)]\r\nif IN[5]:\r\n\toptions = ImageExportOptions()\r\n\toptions.FilePath = filePath\r\n\toptions.ExportRange = ExportRange.SetOfViews\r\n\toptions.SetViewsAndSheets(viewIdList)\r\n\toptions.HLRandWFViewsFileType = ImageFileType.PNG\r\n\toptions.PixelSize = 2500\r\n\toptions.ImageResolution = ImageResolution.DPI_600\r\n\toptions.FitDirection = FitDirectionType.Horizontal\r\n\toptions.ZoomType = ZoomFitType.FitToPage\r\n\tdoc.ExportImage(options)\r\n#ColorViews\r\nviewColorIdList = [view.Id for view in UnwrapElement(viewColorList)]\r\nif IN[6]:\r\n\toptions = ImageExportOptions()\r\n\toptions.FilePath = filePath\r\n\toptions.ExportRange = ExportRange.SetOfViews\r\n\toptions.SetViewsAndSheets(viewColorIdList)\r\n\toptions.HLRandWFViewsFileType = ImageFileType.PNG\r\n\toptions.PixelSize = 5000\r\n\toptions.ImageResolution = ImageResolution.DPI_600\r\n\toptions.FitDirection = FitDirectionType.Horizontal\r\n\toptions.ZoomType = ZoomFitType.FitToPage\r\n\tdoc.ExportImage(options)\r\n##########################################################################\r\n##########################################################################\r\n# IFC Export\r\n##########################################################################\r\n##########################################################################\r\nif IN[7]:\r\n\toptions=IFCExportOptions()\r\n\toptions.FileVersion = IFCVersion.IFC2x3CV2\r\n\toptions.AddOption(\"ExportUserDefinedPsets\",\"true\")\r\n\toptions.AddOption(\"ExportInternalRevitPropertySets\",\"false\")\r\n\toptions.AddOption(\"ExportBaseQuantitiesPsets\",\"false\")\r\n\toptions.AddOption(\"ExportExportIFCCommonPropertySets\",\"false\")\r\n\toptions.AddOption(\"ExportUserDefinedPsetsFileName\",str(IN[8]))\r\n\t\t\r\n\tc=doc.Export(exportPath, fileName, options)\r\n##########################################################################\r\n##########################################################################\r\n#Dwg Export\r\n##########################################################################\r\n##########################################################################\r\n#viewIdList = List[ElementId]([view.Id for view in UnwrapElement(viewList)])\r\nif IN[9]:\r\n\toptions = DWGExportOptions()\r\n\tdoc.Export(exportPath, fileName, List[ElementId](viewIdList), options)\r\n##########################################################################\r\n##########################################################################\r\n#Log Export\r\n##########################################################################\r\n##########################################################################\r\nif IN[10]:\r\n\tstdout_original = sys.stdout\r\n\tstdout_file = open(exportPath + \"/Log.txt\", 'a')\r\n\tsys.stdout = stdout_file\r\n\t\r\n\tprint(\"This is a filler... da da da\")\r\n\r\n\tsys.stdout = stdout_original\r\n\tstdout_file.close()\r\n\t\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Assign your output to the OUT variable.\r\nOUT = viewList, viewColorList, path",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "1c53288618d5449c8403f3964fb0e68f",
      "Inputs": [
        {
          "Id": "84aab32bd759494ab270eb3982f99aa5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02388a5990284d1d89322bb4fdd6e907",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6645c1b7c3dc47029c151d0fb4dfc231",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02f222dcd5c84722a69e1910c9dc07d2",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89feb6f05d6f4b038ffabeec46f79f85",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "012141781dd24240b14d01e6ed97b315",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d222358b42194394b9c17ff1fdd59d63",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1531865d835b48eeb611f3547f3b17b5",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2890f8fe628d4ab5a8bf1d3c9ecbc7c8",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16605ca83d1c48bca00648337496d565",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64fd7998e3fb4fae822a421fc022e59b",
          "Name": "IN[10]",
          "Description": "Input #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1bcd319935ab4cc0ace18fce5a65edd3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nimport time\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#Import Revit Nodes\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference(\"RevitAPI\")\r\n\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.DB.Architecture import *\r\n\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\nclr.AddReference(\"System\")\r\nfrom System.Collections.Generic import List\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nlistList = IN[0][3]\r\nlevelList = UnwrapElement(listList[0])\r\ndecorationList = UnwrapElement(listList[8])\r\n\r\n# functions\r\ndef ConvertColor(e):\r\n\treturn Color(e.Red, e.Green, e.Blue)\r\n\r\ndef OverrideColorPattern(element, color, pattern, view):\r\n\tgraphicSettings = OverrideGraphicSettings()\r\n\tgraphicSettings.SetSurfaceForegroundPatternColor(color)\r\n\tgraphicSettings.SetCutForegroundPatternColor(color)\r\n\tgraphicSettings.SetSurfaceForegroundPatternId(UnwrapElement(pattern).Id)\r\n\tgraphicSettings.SetCutForegroundPatternId(UnwrapElement(pattern).Id)\r\n\tUnwrapElement(view).SetElementOverrides(element.Id, graphicSettings)\r\n\t\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\n# Place your code below this line\r\nfloorTypes = FilteredElementCollector(doc).OfClass(ViewFamilyType).ToElements();\r\nfloorId = UnwrapElement( floorTypes[0]).Id\r\n\r\nviewList = []\r\n\r\nfor level in levelList:\r\n\tview = ViewPlan.Create(doc, floorId, level.Id)\r\n\t\r\n\tview.HideElements(List[ElementId](FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Elev).ToElementIds()))\r\n\tview.HideElements(List[ElementId](FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Viewers).ToElementIds()))\r\n\tview.CropBoxActive = True\r\n\tviewRange = view.GetViewRange()\r\n\tviewRange.SetOffset(PlanViewPlane.ViewDepthPlane, -5)\r\n\tview.SetViewRange(viewRange)\r\n\tviewList.append(view)\r\n\t\r\n\t#########################################################\r\n\t#########################################################\r\n\t# Coloured Views\r\nobstacleColor = ConvertColor(IN[2])\r\noriginColor = ConvertColor(IN[3])\r\ndestinationColor = ConvertColor(IN[4])\r\nverticalTransportationColor = ConvertColor(IN[5])\r\nwalkableFloorColor = ConvertColor(IN[6])\r\n\r\n#get all elements\r\nwalkableFloors = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Floors)\r\nwalls = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Walls)\r\ncolumns = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralColumns)\r\ngeneralModels = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_GenericModel).OfClass(FamilyInstance).ToElements()\r\nverticalTransportationElements = []\r\norigins = []\r\ntrainWalls = []\r\nfor element in generalModels:\r\n\tif element.Name == IN[0][6][3].Name or element.Name == IN[0][6][4].Name:\r\n\t\tverticalTransportationElements.append(element)\r\n\telif element.Name == IN[0][6][5].Name:\r\n\t\torigins.append(element)\r\n\telif element.Name == IN[0][6][6].Name:\r\n\t\ttrainWalls.append(element)\r\n\t\r\n# solid fill pattern\r\nfillPatterns = FilteredElementCollector(doc).OfClass(FillPatternElement)\r\nfor pattern in fillPatterns:\r\n\tif UnwrapElement(pattern).GetFillPattern().IsSolidFill:\r\n\t\tsolidPattern = pattern\r\n\t\tbreak\r\nviewListColour = []\r\nif IN[1]:\r\n\tviewTypes = FilteredElementCollector(doc).OfClass(ViewFamilyType).ToElements();\r\n\tviewTypeId = UnwrapElement( viewTypes[0]).Id\r\n\r\n\t\r\n\t\r\n\tfor level in levelList:\r\n\t\tview = ViewPlan.Create(doc, viewTypeId, level.Id)\r\n\t\tview.Name = view.Name + \" Coloured\"\r\n\t\tview.Name = view.Name.Replace(\"(1)\",\" \")\r\n\t\tview.HideElements(List[ElementId](FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Elev).ToElementIds()))\r\n\t\tview.HideElements(List[ElementId](FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Viewers).ToElementIds()))\r\n\t\tview.CropBoxActive = True\r\n\t\tviewRange = view.GetViewRange()\r\n\t\tviewRange.SetOffset(PlanViewPlane.ViewDepthPlane, -5)\r\n\t\tview.SetViewRange(viewRange)\r\n\t\tview.DetailLevel = ViewDetailLevel.Medium\r\n\t\tviewListColour.append(view)\r\n\r\n\t#Apply Color\r\n\t\tfor floor in walkableFloors:\r\n\t\t\tOverrideColorPattern(floor, walkableFloorColor, solidPattern, view)\r\n\t\t\tif floor.LookupParameter(\"accu_rate_type\") is not None:\r\n\t\t\t\tif floor.LookupParameter(\"accu_rate_type\").AsString() == \"Destination\":\r\n\t\t\t\t\tOverrideColorPattern(floor, destinationColor, solidPattern, view)\r\n\t\t\t\telif floor.LookupParameter(\"accu_rate_type\").AsString() == \"Origin\":\r\n\t\t\t\t\tOverrideColorPattern(floor, originColor, solidPattern, view)\r\n\t\t\t\t\r\n\t\tfor wall in walls:\r\n\t\t\tOverrideColorPattern(wall, obstacleColor, solidPattern, view)\r\n\t\tfor column in columns:\r\n\t\t\tOverrideColorPattern(column, obstacleColor, solidPattern, view)\r\n\t\tfor deco in decorationList:\r\n\t\t\tOverrideColorPattern(deco, obstacleColor, solidPattern, view)\r\n\t\tfor vert in verticalTransportationElements:\r\n\t\t\tOverrideColorPattern(vert, verticalTransportationColor, solidPattern, view)\r\n\t\tfor origin in origins:\r\n\t\t\tOverrideColorPattern(origin, originColor, solidPattern, view)\r\n\t\tfor wall in trainWalls:\r\n\t\t\tOverrideColorPattern(wall, obstacleColor, solidPattern, view)\r\n\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Assign your output to the OUT variable.\r\nOUT = viewList, viewListColour",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "87e6d59395374d1186a9b34aa57f3548",
      "Inputs": [
        {
          "Id": "62f0dbe3173747a8a37ef3d71bd3f452",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bc2d2fa7404425da4aecf65c1f7bc5a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "100c1268487848c9bc8cf71543704b58",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6039fcf6f0543a9a8fd3ed259805b6d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c50ae48f0be74a2ea29725a615a5fc4d",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8647f07ddeb340daab691100500773c4",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8335bf1bbc54c8db4599b9866147da4",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23b28942039743f79e2f17a3e0111fbf",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Führt ein eingebettetes Python-Skript aus."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "3b2c10c8a1524b479b5cd847680f0240",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0f325c127efe4f37bd98ea6cfdeddaf6",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "63402c7670f742acb41b19fc3c0ad594",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ea9135aaa6e4b3098aaa62b6276da9e",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "d09eb7be7c5e4b79bddbdd7f3912d1bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5bb656a2506446ca885a02e89555784e",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "de5b48ea60e349d49fbefa11c9f00ed2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "81fd3db74b7c4351906587226bb5e5ef",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "6e93aa57406243c2b6f53041a8942466",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0407e9fdb89945a28e0cbe301feb55e7",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "D:\\Hiwi",
      "InputValue": "D:\\Hiwi",
      "NodeType": "ExtensionNode",
      "Id": "03bf2edffdbd4ad18d85298e3ea57e68",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf70c9d3b2c946cfb6e764cb2cf7afe0",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ermöglicht die Auswahl einen Verzeichnisses auf dem System, um seinen Pfad abzurufen."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "ff17db7c0a864e948289d7fedbef2c52",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e5b98e96669f4b6a8643277fa88b4950",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Test_",
      "Id": "30b6ec3bedbc4969a5d94292630a946b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "923eeb915cce4a1b8cf0c54da3a70626",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Erstellt eine Zeichenfolge."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "574f44dd54594825959be19fffcac4de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ba224b080834777a4d12601f7de2e58",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Auswahl zwischen True und False"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 0,
        "B": 255,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "96286062063d408db68bfe0c1d4dcd34",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "28eb855acc8f4743b9883cf342f0dcd1",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Wählen Sie eine Farbe aus der Palette."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 124,
        "G": 252,
        "B": 0,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "53a3fa21b73d40d0bb3a902a1bd49c33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f96cf5604f6741448773cccb5f0d06ea",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Wählen Sie eine Farbe aus der Palette."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 0,
        "B": 0,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "bcd98c5768c34d419f03ff1b876ec7f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "585bad45cb234d09a59399e022769c39",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Wählen Sie eine Farbe aus der Palette."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 210,
        "G": 105,
        "B": 30,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "8babd6351e9a4db4a769cc4fc0d806d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9a3b21389e70441ea4c4f8c71d199426",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Wählen Sie eine Farbe aus der Palette."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 64,
        "G": 224,
        "B": 208,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "422f2fbbd2a2461e94ae664c918e2b23",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4788e5f1f80a457a969b204eca49c10a",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Wählen Sie eine Farbe aus der Palette."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 19,
      "SelectedString": "EG (Architekt)",
      "NodeType": "ExtensionNode",
      "Id": "263536cdede54434af2a2036eca4f9c8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "87f5679f69a44fa49963841730803c0d",
          "Name": "Views",
          "Description": "The selected Views",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Alle im aktuellen Dokument verfügbaren Ansichten"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\Dokumente\\Uni\\Hiwi\\ExportIFCMappings.txt",
      "InputValue": "D:\\Dokumente\\Uni\\Hiwi\\ExportIFCMappings.txt",
      "NodeType": "ExtensionNode",
      "Id": "190741c55ff54935a522ddcf25594936",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "670683c8bd6141ac946defbe0c0ef614",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Ermöglicht die Auswahl einer Datei auf dem System, um ihren Dateinamen abzurufen."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Transaction.Transaction.Start@var",
      "Id": "785587e89e0d4254851d66b8d1b81fc9",
      "Inputs": [
        {
          "Id": "ac6a271a0aaa4c3991240db5bbf343c1",
          "Name": "input",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "926055daa223474689f06d7dce81a35a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Startet nötigenfalls eine Transaktion, und gibt den übergebenen Wert zurück.\n\nTransaction.Start (input: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Transaction.Transaction.Start@var",
      "Id": "42fa0620dad04892beca9eb2a257c5c3",
      "Inputs": [
        {
          "Id": "57654b6cc4e64ec38c13eb37369c04ee",
          "Name": "input",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99f5c26add504ce3b71467016b17deb7",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Startet nötigenfalls eine Transaktion, und gibt den übergebenen Wert zurück.\n\nTransaction.Start (input: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Transaction.Transaction.End@var",
      "Id": "7702ac28ad8c4ec2abf515aa060304b1",
      "Inputs": [
        {
          "Id": "026105fc13a14e7bb9f1e12c2e9d9cf9",
          "Name": "input",
          "Description": "Ein Objekt\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfbc3fbfe26646d3a9578296115349be",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Beendet die aktuelle Dynamo-Transaktion, und gibt den übergebenen Wert zurück.\n\nTransaction.End (input: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Transaction.Transaction.End@var",
      "Id": "add6db02c20d4497b94e71129528fc96",
      "Inputs": [
        {
          "Id": "7e6517a4541c473f9d5460790eba3905",
          "Name": "input",
          "Description": "Ein Objekt\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e85435ce2515489fb65412d0c0573773",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Beendet die aktuelle Dynamo-Transaktion, und gibt den übergebenen Wert zurück.\n\nTransaction.End (input: var): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "0b572195c4804c18a64f36fa000d3217",
      "End": "e2e02ee2610e403caa4a41a8023cd8f3",
      "Id": "15ca5e7e7e8c4bf5aefcae35a329adfd"
    },
    {
      "Start": "0b572195c4804c18a64f36fa000d3217",
      "End": "3a011102234f42c4b74e9c62279d45f4",
      "Id": "2346e655969140e5b1afeb46d038f778"
    },
    {
      "Start": "645ffdbbd04b407ba2aeb46ca5ab76ec",
      "End": "a2ffa24a8d19403b8ae511ff9c4c4d52",
      "Id": "9b0e40b96daa402aa805f2c0bd0704fd"
    },
    {
      "Start": "5f6d3e15c28d4dbabb280bdded66e5e8",
      "End": "93ae402c19a0452e81c79dca18292805",
      "Id": "a64cda9b1de84234a8be419b4f0c0d41"
    },
    {
      "Start": "905a14a04b0046599157d19ffedc3987",
      "End": "ac6a271a0aaa4c3991240db5bbf343c1",
      "Id": "11f88bdd4d874f6bb9b1d651037b50e1"
    },
    {
      "Start": "902a109168e44eb5b2a8fb7d3f1f9533",
      "End": "a9f106b5f53a4c2db153f78670631d84",
      "Id": "50877c015ec64ddca9c0b39f7fa45d1c"
    },
    {
      "Start": "a82ac3fd98cb4b90acc377a917e51dd0",
      "End": "7faf4c334a15479ca52cd21d13b9ac50",
      "Id": "944695a1698c444abafef5cd7e6ce426"
    },
    {
      "Start": "bfa9577467c6426a9ceac6e10c957b9a",
      "End": "e154bc06cdbf4fef9360d5ce95419d27",
      "Id": "215a194d17ea446d8fe05c91e82c237d"
    },
    {
      "Start": "69b0de06bd7448e4b6129fb0771528f2",
      "End": "e9a35393200549b8a4832dc9dae0dad0",
      "Id": "0ab4f090825e48ad84bd41eb03f22f57"
    },
    {
      "Start": "ad86877859104ddf97f25650d09add30",
      "End": "4bfb5b09a34c4e168619ec2fbf9feeec",
      "Id": "738a1873fc654d2bb07d2566e32434d6"
    },
    {
      "Start": "53c04e998cc340c2a5ffd57985de6635",
      "End": "97ad01270b8c4751a8b1a66ff9a45438",
      "Id": "c77965f629a149c4aeb3cf5868002e5b"
    },
    {
      "Start": "e18afde8abd74940bd2c66f9ea6ebf89",
      "End": "7ed1373472f64d34ae9b91b844d21271",
      "Id": "7169d4a8f77e45a3980a79acd6f88fe9"
    },
    {
      "Start": "19548bb122024254b787e58c96f9d4f3",
      "End": "026105fc13a14e7bb9f1e12c2e9d9cf9",
      "Id": "476cbdc709534b7fa58e524566c3c167"
    },
    {
      "Start": "ed3a6a754c09495a88c4ef637f16388c",
      "End": "5a667bc430d1487494522b182c28b37a",
      "Id": "045b192cd2e447c08db24d98cde44c95"
    },
    {
      "Start": "ed3a6a754c09495a88c4ef637f16388c",
      "End": "0d40eb4ae6bf428da5d97e8d0ea57ce7",
      "Id": "05bd07a06eb146e6a34bafe3497ff96f"
    },
    {
      "Start": "6062cb01d866449c9a333bed72805252",
      "End": "dd4dc8b63f5c4a7ab573e1e1ad4959e3",
      "Id": "e6f7fc74a6854868b6e0570b04353bc6"
    },
    {
      "Start": "abaaf6230eea490992861ca1bfdabf08",
      "End": "94736aca592a42159035118e9bd60aa0",
      "Id": "3a9f5661546b4ce39c2e4f9c987e9b9b"
    },
    {
      "Start": "80de50804edc41adbea43dfcfe200c07",
      "End": "c59e8c4b465d4d638cd2727b4e68dd34",
      "Id": "89fac71f03b14c61bd73813327f81802"
    },
    {
      "Start": "8a37c7b8b3534e6b9729f187e935e3f2",
      "End": "66d99352aafb4c61b307f1b9d065a245",
      "Id": "78d6ef497cff42e7adbe3039a319f0d1"
    },
    {
      "Start": "15ddd1f9c5c54f29b02ed6fddad84f98",
      "End": "0ab31926bb6a4dd0a5f99839ef8e237c",
      "Id": "7e3d2f80253143f4bd380adeb7b115ab"
    },
    {
      "Start": "cbf5cc635b0d4381842bd1ab4e83de78",
      "End": "e51c0990fb9e4fae9d29cf555014c2d6",
      "Id": "f44492e5c3374b54b5e373e4ace1230b"
    },
    {
      "Start": "2e981f7c2bb64f1d85493f8c0ecd0bdc",
      "End": "3829441d66e946ec82bdd321ac57691f",
      "Id": "194a90342ef442f0b3ba51246171ea80"
    },
    {
      "Start": "1b4b69dec30e439b839b0b8aba428a52",
      "End": "29561ad3f79f4a77913bffc9ccf48eb6",
      "Id": "5b9d9d811f6e4be88787c7fe8b945127"
    },
    {
      "Start": "1b4b69dec30e439b839b0b8aba428a52",
      "End": "e1e646faacbc458eafc72829db4b82c3",
      "Id": "a25280f853dc41c7968902b545b082b2"
    },
    {
      "Start": "c7e5e94608a64df095aab7a895b1f1ef",
      "End": "cdebd4fa74a1498f8979027fabe97bfb",
      "Id": "c9d0042b39924eb8aa5d6a6676d59824"
    },
    {
      "Start": "8fe2ca711e1f4a4a8a09cfe249ee815e",
      "End": "7bd1986587e6453a93efc48ad8e4c674",
      "Id": "fd18a02d19584b29a9756ac42219bdbd"
    },
    {
      "Start": "43684ba876684d278f1edd08f40df9b4",
      "End": "063101a45c3e4ca398535cbc91481c4d",
      "Id": "88c5bd69d4464a4cb894d985ea52f5ab"
    },
    {
      "Start": "6ee348c6aabb4256867cfecded10c5cd",
      "End": "46a4a4a71956456494750a48b6eca36a",
      "Id": "160d20469f4e45b6973968ea8a34c6f3"
    },
    {
      "Start": "d315704e7cec4220bdbec08f27818ba4",
      "End": "f57123c7607148838f19305406aa29e4",
      "Id": "20e4cfde3bc74123a224b23a73c80154"
    },
    {
      "Start": "552638be7b374455ae8ab53b85ea72f1",
      "End": "baee9d0decc94186a5bfdb48b9abbbd5",
      "Id": "d8b803393dc84f42a2d950cbdd4ee4cd"
    },
    {
      "Start": "948d36e87d6749a0b83a45c33ff4ce78",
      "End": "626b0a42593f456caa490eadcced9044",
      "Id": "8665ac46896b410396e3f01ace191a6f"
    },
    {
      "Start": "f730852870624c368487e690bdab275f",
      "End": "47bc4fd5d01e4fff865cd5802d85cd06",
      "Id": "55d316362b5a4f6c968f7a2800b38063"
    },
    {
      "Start": "cac4690f59024bf2b086d3a832f5c08e",
      "End": "3e864c454abb49d388c3f9ecc4ea181d",
      "Id": "969a426b56df4d0c80ab8068dce5c5a6"
    },
    {
      "Start": "8154bd0aa63a4bc6a06a9ba245626224",
      "End": "d28b5e53f4c74e919ffdb028890f0fd4",
      "Id": "6811f337c5cf48c894d88cec0ce215f1"
    },
    {
      "Start": "4e24ef82048b44028aff57dc2f0a666e",
      "End": "6869c76d46d041009be42161378a9a22",
      "Id": "7f5aa0a10a60477dabf2fcfabea45062"
    },
    {
      "Start": "966e76a808dc457aa437427052de2ea0",
      "End": "65ab6c93d9c34ff19f1dcd2641da7a8d",
      "Id": "2e120217c1c5442f9ddc390ba03bc590"
    },
    {
      "Start": "e9e416f150ca477f8f408d9c658c002e",
      "End": "66caa2cdacdc49d9b496f77217253990",
      "Id": "7ca43fbdbebb4873b7c09c647606aa6a"
    },
    {
      "Start": "55de3ad9e11a4349a9922b8af3af16a5",
      "End": "c771ffd098194cc984325f2c5a9e9676",
      "Id": "6eef78ad5cf7480f961180ea3ff47e5b"
    },
    {
      "Start": "7dacc02e4598484c911ef148311ea9be",
      "End": "c9359ab310644dc086eac78ab28cc4b2",
      "Id": "9b07e954f0cd4f07a3898229381b99d5"
    },
    {
      "Start": "3a799cc98d0f410db77ca2597b636813",
      "End": "f15be15f312a4fd5813e4b588e504fac",
      "Id": "daa9e974da9e44bba678e6558fb02b98"
    },
    {
      "Start": "1fa72074c51247d4910e1806030fab8b",
      "End": "2d59a402367840c98132474ad1e90c1f",
      "Id": "f3e4cc5134dc4002a3610f9f749d9f52"
    },
    {
      "Start": "e19572f9037d46bd8f30b7520cd85231",
      "End": "1b327040b6964e26a9f5c2e4641d7892",
      "Id": "61a86687988f4e948cce1c8a0e65fe2f"
    },
    {
      "Start": "ae5bc0821e9441b5891dd32272291838",
      "End": "3aa5d11ff4444e428420af3b2e3cdd56",
      "Id": "4b247f6317284fe4ae0375d3abbb6299"
    },
    {
      "Start": "a59e80708ad645afaad9f814f734d994",
      "End": "b75a513a18a2443e9e5b482d433dd3b0",
      "Id": "c617498b3ba34aa1a6f08fd948d1e27c"
    },
    {
      "Start": "6033a5f85f334c4fb776e0c16b4ae024",
      "End": "1531865d835b48eeb611f3547f3b17b5",
      "Id": "634ca09fcbfa422abd0e4edee1a3c309"
    },
    {
      "Start": "4b8e3c57c9a9452fb16f3bdd0fa3f8a3",
      "End": "ccbaad2d90ed458399ee27dcf8a7277f",
      "Id": "d20464350ca94b8cb5ede0cb1e99927b"
    },
    {
      "Start": "207a1fb498fa40f89444e9744bf923a8",
      "End": "08c938a77a284acb8817538a14186f0a",
      "Id": "1373add95b0c43e0861f8913e3fc95b7"
    },
    {
      "Start": "1a27d7e77ab7435ba8fe804d489488d3",
      "End": "16b0f9a0c24047f78d3c9d42d62e6c18",
      "Id": "6252a87149db4540a4fa3b3f90d409ec"
    },
    {
      "Start": "a35eb04cfbf644728344549c360d5a7c",
      "End": "b09b25e0cb85442d91900ac683549540",
      "Id": "6c34e856b8e046e381195aea1f549f72"
    },
    {
      "Start": "3a09cf818c4b460cbd5fda45829eece0",
      "End": "2410259915be43ac9623e7086ae5b07a",
      "Id": "d51945b8caf64d4bad9655ee2758bdba"
    },
    {
      "Start": "3a09cf818c4b460cbd5fda45829eece0",
      "End": "1fada0f3804b4eceb417996a9e2746ca",
      "Id": "24b4647986c841c1add56ea30a75239e"
    },
    {
      "Start": "629c161841ad43edb51f6634a3b0d556",
      "End": "314e14a12fdc49f29f76991b258ef613",
      "Id": "3bafcc12d1f44dfe9a4e2f01a6bedf6a"
    },
    {
      "Start": "629c161841ad43edb51f6634a3b0d556",
      "End": "e0f0889a88024757bcc5c6a7e391a19a",
      "Id": "45aa6bf04f3f4bfc91167a7d8e78f1ae"
    },
    {
      "Start": "450779b2d2c44c0097e98feb350c5b2d",
      "End": "f90c08daa0d34091b05af87c23713ace",
      "Id": "8c010f2b4e014eb497f364b85de249bf"
    },
    {
      "Start": "6372d02a3d16452d94e9ed01bf3c69bc",
      "End": "2f97a8999d554d1da0d6e915ed19c14a",
      "Id": "3a4af53c4d2d43a7ad2dac90bc3b87a3"
    },
    {
      "Start": "6372d02a3d16452d94e9ed01bf3c69bc",
      "End": "c0c35cfd70394729a390e2d252ce7fc2",
      "Id": "64d6aff30c444291affd42f8eb7d49c4"
    },
    {
      "Start": "34133f80ce7544b59c160eef703f7c5e",
      "End": "39db69ce132448b999ef58b7008685f7",
      "Id": "dbdd751bb75449228deda79d9860dfd0"
    },
    {
      "Start": "3aa8cb485fbf42db9c4ad0f9d3aa6b88",
      "End": "28e30d74b1cb41c99c75fb109b48307b",
      "Id": "ed71c5d144dc4313a2b0999a18b0f9a3"
    },
    {
      "Start": "2668e6fe979844a48fe168791a48e88c",
      "End": "a5123abf80ec41bf864f24584a36f9a5",
      "Id": "4f1317b105014fc78f4780aa5b0ac4c8"
    },
    {
      "Start": "035ebd166e89469ca54370bc7958b9d7",
      "End": "3b63db33461249a0880fed221a26fee1",
      "Id": "b9bd22dcca794197a28bea1bb6451a68"
    },
    {
      "Start": "dc8a6772f9b84ac3bc5c38263b478ee7",
      "End": "05ad15395ca14aed9df1f414f3f76f23",
      "Id": "4ff02a0d061d40968b991114f5fd5781"
    },
    {
      "Start": "dc8a6772f9b84ac3bc5c38263b478ee7",
      "End": "600b50bf72a14777a2e274b8d21a9cab",
      "Id": "890cf311a2db4ae19cef5e6caa80bb97"
    },
    {
      "Start": "1729df3e99654d36badfaa727c3ea9e8",
      "End": "7b5eb51eefed43b5ac17505de7d87f67",
      "Id": "efda997ed996466aa163fd33db26f4a8"
    },
    {
      "Start": "4136017b87a541bca42c1019e704ba96",
      "End": "0a9f101c21f54747ad313a47b414ef06",
      "Id": "1b338063a3b84b8498ef946c69877ca5"
    },
    {
      "Start": "ee336fb1de8b4fefa7ceb7b92ecba990",
      "End": "5943cd6dee264bb4a36f9fb626bbf566",
      "Id": "eca890f1f53c4929ba045e523052f6ef"
    },
    {
      "Start": "47b3dacf2ac64748bbdb421d110d41af",
      "End": "a2ad106d3c294f04b9e1d80d0aa92887",
      "Id": "600562550ab84ad693640d5e5b4508c6"
    },
    {
      "Start": "dc6ea25e539d4257b1e1499290f7cf0f",
      "End": "cb41d47510df402ba4184879b18665cd",
      "Id": "6bc225b7cf7c48e7af1b5a10647a01c0"
    },
    {
      "Start": "6aefd4f5903246899db093c7d1491994",
      "End": "7af0da1fea204424a5e6e2b2f447c68e",
      "Id": "93a4f1e30ab24e73b1a34f689fb9b4d7"
    },
    {
      "Start": "23b28942039743f79e2f17a3e0111fbf",
      "End": "7e6517a4541c473f9d5460790eba3905",
      "Id": "6281287de8c54502b870fb347a6017c9"
    },
    {
      "Start": "0f325c127efe4f37bd98ea6cfdeddaf6",
      "End": "8bc2d2fa7404425da4aecf65c1f7bc5a",
      "Id": "09a55c73c5e648a0a13895c7a36c99d5"
    },
    {
      "Start": "7ea9135aaa6e4b3098aaa62b6276da9e",
      "End": "16605ca83d1c48bca00648337496d565",
      "Id": "4a9324eb7f33431c9c13eb006e6f2f43"
    },
    {
      "Start": "5bb656a2506446ca885a02e89555784e",
      "End": "012141781dd24240b14d01e6ed97b315",
      "Id": "7ad5d2ade501483bad4360f44180ea72"
    },
    {
      "Start": "81fd3db74b7c4351906587226bb5e5ef",
      "End": "d222358b42194394b9c17ff1fdd59d63",
      "Id": "1b2a7f5a96354333b5f7b7b7022fa809"
    },
    {
      "Start": "0407e9fdb89945a28e0cbe301feb55e7",
      "End": "64fd7998e3fb4fae822a421fc022e59b",
      "Id": "2cefefd6044d43b5896cc38777aec8e2"
    },
    {
      "Start": "bf70c9d3b2c946cfb6e764cb2cf7afe0",
      "End": "02388a5990284d1d89322bb4fdd6e907",
      "Id": "d7ad9e523cec490b83e5793115ffad7b"
    },
    {
      "Start": "e5b98e96669f4b6a8643277fa88b4950",
      "End": "6645c1b7c3dc47029c151d0fb4dfc231",
      "Id": "5191042592b14782b1da75f80e31617a"
    },
    {
      "Start": "923eeb915cce4a1b8cf0c54da3a70626",
      "End": "02f222dcd5c84722a69e1910c9dc07d2",
      "Id": "9c15a54cc48743528f2e85f51f9bdd46"
    },
    {
      "Start": "7ba224b080834777a4d12601f7de2e58",
      "End": "89feb6f05d6f4b038ffabeec46f79f85",
      "Id": "f18137cab55d4f9d94608c075fa1f290"
    },
    {
      "Start": "28eb855acc8f4743b9883cf342f0dcd1",
      "End": "100c1268487848c9bc8cf71543704b58",
      "Id": "6878ad12b13f44ee9f7daefbdec20bf6"
    },
    {
      "Start": "f96cf5604f6741448773cccb5f0d06ea",
      "End": "c50ae48f0be74a2ea29725a615a5fc4d",
      "Id": "2a485f34e2484f6a83c5a488557614fb"
    },
    {
      "Start": "585bad45cb234d09a59399e022769c39",
      "End": "8647f07ddeb340daab691100500773c4",
      "Id": "7d89c15ffba24706971830be7178a3b9"
    },
    {
      "Start": "9a3b21389e70441ea4c4f8c71d199426",
      "End": "f6039fcf6f0543a9a8fd3ed259805b6d",
      "Id": "8c5a4c2ee5ca467f96659cd36fa97967"
    },
    {
      "Start": "4788e5f1f80a457a969b204eca49c10a",
      "End": "d8335bf1bbc54c8db4599b9866147da4",
      "Id": "267aa33073fe47f0b3466ee9f830208d"
    },
    {
      "Start": "87f5679f69a44fa49963841730803c0d",
      "End": "cb0739e1728a4df8b68c39af95e8bf2b",
      "Id": "b3d1cb14c7844ada964d862584e1db69"
    },
    {
      "Start": "670683c8bd6141ac946defbe0c0ef614",
      "End": "2890f8fe628d4ab5a8bf1d3c9ecbc7c8",
      "Id": "b6d708aa71594b8788044b901ff8dbc2"
    },
    {
      "Start": "926055daa223474689f06d7dce81a35a",
      "End": "08a597458f414f65a0f3d49535df3416",
      "Id": "79b0ea8440934cf7a500e4ff57a53911"
    },
    {
      "Start": "99f5c26add504ce3b71467016b17deb7",
      "End": "62f0dbe3173747a8a37ef3d71bd3f452",
      "Id": "d0011741f1ec415588c55a2d5e221366"
    },
    {
      "Start": "bfbc3fbfe26646d3a9578296115349be",
      "End": "57654b6cc4e64ec38c13eb37369c04ee",
      "Id": "0c3c2265676b4f379c42d75b8314749c"
    },
    {
      "Start": "e85435ce2515489fb65412d0c0573773",
      "End": "84aab32bd759494ab270eb3982f99aa5",
      "Id": "0d5f5b2a110841ffb99c45bab0f4dbe2"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Hintergrundvorschau",
      "EyeX": 0.10511863245405331,
      "EyeY": 46.098557915990938,
      "EyeZ": 45.795292282782142,
      "LookX": -0.16147116776752193,
      "LookY": -34.116789183080861,
      "LookZ": -29.783025543902312,
      "UpX": -0.0032248341697938289,
      "UpY": 0.80385686061721817,
      "UpZ": -0.59481404496128853
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Levels",
        "Id": "91184f7c047c40aaa110ded98cf3e461",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -326.870142114209,
        "Y": -275.976037465839
      },
      {
        "ShowGeometry": true,
        "Name": "Wall Types",
        "Id": "16ebeca796054d8f923afbaf528319bd",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1132.1543963388935
      },
      {
        "ShowGeometry": true,
        "Name": "Wall Height",
        "Id": "5a1fb6986487418a80057656a50ca8a1",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1286.14571148733,
        "Y": -589.175134389751
      },
      {
        "ShowGeometry": true,
        "Name": "Base Script",
        "Id": "b94ab649f1304a028e41b8d07f94707c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 626.10075744592,
        "Y": 147.343780896483
      },
      {
        "ShowGeometry": true,
        "Name": "Structural Column Types",
        "Id": "d7a859123a084f57bf9f6c049349a8b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1227.6260877103043
      },
      {
        "ShowGeometry": true,
        "Name": "Train Family Type",
        "Id": "066869354e7b44b8a9563afcbb0780e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1514.0411618245366
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements at Level",
        "Id": "b5296ebfad454f98b72cc564ba0e8214",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -96.900341317938,
        "Y": -198.459261365351
      },
      {
        "ShowGeometry": true,
        "Name": "Delete All Elements Before Each Run",
        "Id": "b946a6d5f8134cbd98d05f5965d1fa06",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -230.900341317938,
        "Y": -108.800416343859
      },
      {
        "ShowGeometry": true,
        "Name": "No of Column Rows",
        "Id": "d81e3a3ec50544a4a711c14418961e25",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1286.14571148733,
        "Y": -715.85036230985
      },
      {
        "ShowGeometry": true,
        "Name": "Escalator Family Type",
        "Id": "a546ad92001346f5bb198c55452494d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1418.5694704531259
      },
      {
        "ShowGeometry": true,
        "Name": "Floor Types",
        "Id": "52c8935a887d4c54825856a370029332",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1036.6827049674828
      },
      {
        "ShowGeometry": true,
        "Name": "Main Create Script",
        "Id": "5e46294564674e7d8151f3a2a1c328fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1290.3375273167496,
        "Y": 418.67152223686418
      },
      {
        "ShowGeometry": true,
        "Name": "Platform Length Calc Script",
        "Id": "6f587da72e1149979c6a2c4c9f2c0d40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1692.3955391983259,
        "Y": 699.17688148224977
      },
      {
        "ShowGeometry": true,
        "Name": "Terminus",
        "Id": "f720c80e6f1d4f21bebdcb9555f2933e",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2143.4422365295613,
        "Y": 688.22108041818638
      },
      {
        "ShowGeometry": true,
        "Name": "Max. Train Length",
        "Id": "3cb6533b3fa5459f9123ae291f780de2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2142.574077485574,
        "Y": 606.24566334358724
      },
      {
        "ShowGeometry": true,
        "Name": "Bumper Length",
        "Id": "2f3255ccafbc41a380f658fde805b3c4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2143.7459735049388,
        "Y": 764.50674527818239
      },
      {
        "ShowGeometry": true,
        "Name": "Standard Length",
        "Id": "7b33e5c900614f629567cf0acb30494b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2143.0067235793686,
        "Y": 838.66890090403774
      },
      {
        "ShowGeometry": true,
        "Name": "Width Calc Script",
        "Id": "af774d71e51647caae282fc088bf06bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1167.6516549782023,
        "Y": -43.377176619660418
      },
      {
        "ShowGeometry": true,
        "Name": "Traffic Level i",
        "Id": "3949bf9b3e7a4dcfb52c38c63d41f89c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": 107.73975776240698
      },
      {
        "ShowGeometry": true,
        "Name": "Local Traffic",
        "Id": "2122344a6c6c4f5e900634e71d62c5eb",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": 181.6854717030721
      },
      {
        "ShowGeometry": true,
        "Name": "Elevator Length [m]",
        "Id": "859c366329bb4d16875a776dac8f000a",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2147.5216715124279,
        "Y": -481.842371138487
      },
      {
        "ShowGeometry": true,
        "Name": "Velocity [km/h]",
        "Id": "04530e04386248d3a3affe3762d7660b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": -91.151670118923221
      },
      {
        "ShowGeometry": true,
        "Name": "Train Frequency [n/h]",
        "Id": "b420fc1637f44fc5a6fd8e9929a525df",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.7053165422321,
        "Y": 907.54778298774715
      },
      {
        "ShowGeometry": true,
        "Name": "Elevator Position",
        "Id": "d5fd982584d446088314965fc077506a",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2147.5216715124279,
        "Y": -552.56569941310659
      },
      {
        "ShowGeometry": true,
        "Name": "ATM Family Type",
        "Id": "764f7e4dd112489fab080cb3a02a11f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1704.9845445673582
      },
      {
        "ShowGeometry": true,
        "Name": "Ticketmachine Family Type",
        "Id": "a7e8c75ff74c43c1b3ffb9bbdb322529",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1800.4562359387689
      },
      {
        "ShowGeometry": true,
        "Name": "Exit  X Offset [m]",
        "Id": "619194ee147a46bf869e3e6373ed406f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -940.92718423221459,
        "Y": 169.18948181078747
      },
      {
        "ShowGeometry": true,
        "Name": "Ticketmachine X Offset [m]",
        "Id": "5f4f339b8e3e4864bf9f6a99777f8b4c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -940.92718423221459,
        "Y": 334.76398607970327
      },
      {
        "ShowGeometry": true,
        "Name": "Escalators Facing Inwards",
        "Id": "e15d5903d5f94bfabbbc763e0f037f08",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2066.5216715124279,
        "Y": -764.735684236964
      },
      {
        "ShowGeometry": true,
        "Name": "Store Family Type",
        "Id": "073e994e28f14c03b35614344fb596c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1895.9279273101797
      },
      {
        "ShowGeometry": true,
        "Name": "Type Activation Script",
        "Id": "0bc8b8aefcb94b0f851e4c51d941ae82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1548.6272601697481,
        "Y": 1178.1768264476652
      },
      {
        "ShowGeometry": true,
        "Name": "Stair Family Type",
        "Id": "c227e785b58943edafa76525500a0bd7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1323.0977790817151
      },
      {
        "ShowGeometry": true,
        "Name": "Ticket Validator Family Type",
        "Id": "b72ecce27dbf4e2cb0eee76b03dc336d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1991.3996186815903
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "60a71154374945eeb0db2843f0f4b194",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": -17.205956178258134
      },
      {
        "ShowGeometry": true,
        "Name": "Index",
        "Id": "31a13685283c42b9add86dd57ed46c95",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2146.4457673462548,
        "Y": 83.165290791667189
      },
      {
        "ShowGeometry": true,
        "Name": "List of Platform Heights [m]",
        "Id": "3c5c3fe74d5b41d4b4b801f168fe29d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2144.2970193488645,
        "Y": -91.771877729769585
      },
      {
        "ShowGeometry": true,
        "Name": "Passengers/Train",
        "Id": "5d9828480221475baf6e48bad2b42525",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 178.5693132096759,
        "Y": 718.0031286264624
      },
      {
        "ShowGeometry": true,
        "Name": "Regional Traffic",
        "Id": "d087c5b10db143da9f71e77163911823",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": 255.63118564373718
      },
      {
        "ShowGeometry": true,
        "Name": "Number of Agents",
        "Id": "c126dde365db4cc7a46bb27a6b30f6ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -941.42002353540613,
        "Y": 456.18884072787773
      },
      {
        "ShowGeometry": true,
        "Name": "Tread Width",
        "Id": "3e49a6e7984843bcaf9cd979a140f65d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -941.42002353540613,
        "Y": 525.96559753869792
      },
      {
        "ShowGeometry": true,
        "Name": "Train Family Wall Type",
        "Id": "8cde6c34c459454e9004058a26f28e9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2145.2785271748571,
        "Y": 1609.5128531959474
      },
      {
        "ShowGeometry": true,
        "Name": "Ifc Export",
        "Id": "7b90c8e74b004d8ca656aef26d3f8cfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2440.5352079467839,
        "Y": 1147.9821398212525
      },
      {
        "ShowGeometry": true,
        "Name": "Track Spacing [m]",
        "Id": "bd1b00af5a374ae78a3db17b3cc8d4f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": 329.57689958440227
      },
      {
        "ShowGeometry": true,
        "Name": "Platform Width Override",
        "Id": "5362827e790549c5b778bda177cd6bfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": 403.52261352506736
      },
      {
        "ShowGeometry": true,
        "Name": "Platform Width [m]",
        "Id": "b2c1f69647394f44a916f5bcb14b7bff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1755.4626427721598,
        "Y": 477.46832746573244
      },
      {
        "ShowGeometry": true,
        "Name": "Column Spacing",
        "Id": "1df9694bdc1e411ca2ac7e2131f07671",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1286.14571148733,
        "Y": -652.512748349801
      },
      {
        "ShowGeometry": true,
        "Name": "Stair Width",
        "Id": "4ba388afdb6f4a199c2adaf4d7e4f99c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2147.5216715124279,
        "Y": -835.45901251158318
      },
      {
        "ShowGeometry": true,
        "Name": "Escalator Width (gross)",
        "Id": "072f17785abf4cc39dc5136a68b95710",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2147.5216715124279,
        "Y": -623.28902768772548
      },
      {
        "ShowGeometry": true,
        "Name": "Clearance Values Ril.813.0202",
        "Id": "876097dbc23944c9b6110b8939af53c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2138.5216715124279,
        "Y": -340.39571458924854
      },
      {
        "ShowGeometry": true,
        "Name": "Number of Stairs",
        "Id": "2dc815a069a34ecd827e425ba9d48455",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2147.5216715124279,
        "Y": -906.18234078620264
      },
      {
        "ShowGeometry": true,
        "Name": "No. of Exits",
        "Id": "5549baa7f780455384ca099becc0b93e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1286.14571148733,
        "Y": -779.187976269901
      },
      {
        "ShowGeometry": true,
        "Name": "No. of Ticket Machines Per Exit",
        "Id": "362a811f743d4f03a38ab35cc82d6377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -940.92718423221049,
        "Y": 251.97673394524668
      },
      {
        "ShowGeometry": true,
        "Name": "No. of Track Lines",
        "Id": "a23efd7c6d0f4301aaa00e4eba189874",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1286.14571148733,
        "Y": -842.52559022995
      },
      {
        "ShowGeometry": true,
        "Name": "No. of Levels",
        "Id": "4b40e27ff785438dbe70b1ae9941cfd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1286.14571148733,
        "Y": -905.86320419
      },
      {
        "ShowGeometry": true,
        "Name": "Number of Escalators",
        "Id": "93dd3d42c8c4464fb90f83360efc52de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2147.5216715124279,
        "Y": -694.01235596234471
      },
      {
        "ShowGeometry": true,
        "Name": "Minimum Path Width",
        "Id": "5a57219466db46d29f2521ba7ebbc3fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2147.5216715124279,
        "Y": -411.11904286386778
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToEnd",
        "Id": "767cbce34ce6427e9a7f619a0bb4f935",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1770.0397975850221,
        "Y": -341.36372370017125
      },
      {
        "ShowGeometry": true,
        "Name": "Vertical Transportation List",
        "Id": "4afb43897b264e4bbb7f76c5701457a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1533.4979584882992,
        "Y": -550.43903830656438
      },
      {
        "ShowGeometry": true,
        "Name": "General Parameter List",
        "Id": "1661a82a791d4ef8aefdd38dc65c9189",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -791.837883394469,
        "Y": -833.076654751054
      },
      {
        "ShowGeometry": true,
        "Name": "Top Level List",
        "Id": "057219e7ac7943268312aa8bbe8cf431",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -544.10353651690093,
        "Y": 226.47609795270523
      },
      {
        "ShowGeometry": true,
        "Name": "Crowdit List",
        "Id": "e345f84b7c264af9b6dab424ebebf9c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -536.54274927489371,
        "Y": 472.33243707711148
      },
      {
        "ShowGeometry": true,
        "Name": "Export Manager",
        "Id": "1c53288618d5449c8403f3964fb0e68f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2926.4531917562445,
        "Y": 420.98142827477164
      },
      {
        "ShowGeometry": true,
        "Name": "View Manager",
        "Id": "87e6d59395374d1186a9b34aa57f3548",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2429.5352079467821,
        "Y": 420.98142827477164
      },
      {
        "ShowGeometry": true,
        "Name": "Colored Views",
        "Id": "3b2c10c8a1524b479b5cd847680f0240",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2083.2277618827438,
        "Y": 561.88680453020947
      },
      {
        "ShowGeometry": true,
        "Name": "dwg Export",
        "Id": "63402c7670f742acb41b19fc3c0ad594",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2440.5352079467839,
        "Y": 1319.8875441641294
      },
      {
        "ShowGeometry": true,
        "Name": "View Export",
        "Id": "d09eb7be7c5e4b79bddbdd7f3912d1bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2440.5352079467839,
        "Y": 1002.0767354783757
      },
      {
        "ShowGeometry": true,
        "Name": "Color Export",
        "Id": "de5b48ea60e349d49fbefa11c9f00ed2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2440.5352079467839,
        "Y": 1075.0294376498141
      },
      {
        "ShowGeometry": true,
        "Name": "Log Export",
        "Id": "6e93aa57406243c2b6f53041a8942466",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2437.8427354657233,
        "Y": 1403.2301152408318
      },
      {
        "ShowGeometry": true,
        "Name": "Directory Path",
        "Id": "03bf2edffdbd4ad18d85298e3ea57e68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2468.5352079467839,
        "Y": 684.26592679262194
      },
      {
        "ShowGeometry": true,
        "Name": "Subfolders",
        "Id": "ff17db7c0a864e948289d7fedbef2c52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2440.5352079467839,
        "Y": 783.21862896406037
      },
      {
        "ShowGeometry": true,
        "Name": "Folder Name",
        "Id": "30b6ec3bedbc4969a5d94292630a946b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2437.5352079467839,
        "Y": 856.1713311354988
      },
      {
        "ShowGeometry": true,
        "Name": "Number Suffix",
        "Id": "574f44dd54594825959be19fffcac4de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2427.5352079467839,
        "Y": 929.12403330693724
      },
      {
        "ShowGeometry": true,
        "Name": "Obstacles",
        "Id": "96286062063d408db68bfe0c1d4dcd34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2104.2277618827438,
        "Y": 631.39075661811762
      },
      {
        "ShowGeometry": true,
        "Name": "Destination Zones",
        "Id": "53a3fa21b73d40d0bb3a902a1bd49c33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2057.2277618827438,
        "Y": 820.3986607939346
      },
      {
        "ShowGeometry": true,
        "Name": "Vertical Transportation",
        "Id": "bcd98c5768c34d419f03ff1b876ec7f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2026.2277618827438,
        "Y": 914.90261288184251
      },
      {
        "ShowGeometry": true,
        "Name": "Origin Zones",
        "Id": "8babd6351e9a4db4a769cc4fc0d806d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2092.2277618827438,
        "Y": 725.89470870602554
      },
      {
        "ShowGeometry": true,
        "Name": "Walkable Floors",
        "Id": "422f2fbbd2a2461e94ae664c918e2b23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2072.2277618827438,
        "Y": 1009.4065649697507
      },
      {
        "ShowGeometry": true,
        "Name": "View To Keep",
        "Id": "263536cdede54434af2a2036eca4f9c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -96.900341317938,
        "Y": -44.1415713223665
      },
      {
        "ShowGeometry": true,
        "Name": "Export Mapping",
        "Id": "190741c55ff54935a522ddcf25594936",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2286.5352079467839,
        "Y": 1220.934841992691
      },
      {
        "ShowGeometry": true,
        "Name": "Transaction.Start",
        "Id": "785587e89e0d4254851d66b8d1b81fc9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 996.33752731674963,
        "Y": 418.67152223686418
      },
      {
        "ShowGeometry": true,
        "Name": "Transaction.Start",
        "Id": "42fa0620dad04892beca9eb2a257c5c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2034.2277618827438,
        "Y": 420.98142827477164
      },
      {
        "ShowGeometry": true,
        "Name": "Transaction.End",
        "Id": "7702ac28ad8c4ec2abf515aa060304b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1562.8375273167496,
        "Y": 418.67152223686418
      },
      {
        "ShowGeometry": true,
        "Name": "Transaction.End",
        "Id": "add6db02c20d4497b94e71129528fc96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2653.9941998515133,
        "Y": 420.98142827477164
      }
    ],
    "Annotations": [
      {
        "Id": "ed0a8753746c40729624de93d457afac",
        "Title": "Length Calculation",
        "Nodes": [
          "6f587da72e1149979c6a2c4c9f2c0d40",
          "f720c80e6f1d4f21bebdcb9555f2933e",
          "3cb6533b3fa5459f9123ae291f780de2",
          "2f3255ccafbc41a380f658fde805b3c4",
          "7b33e5c900614f629567cf0acb30494b",
          "b420fc1637f44fc5a6fd8e9929a525df"
        ],
        "Left": -2155.7053165422321,
        "Top": 552.91233001025387,
        "Width": 699.976444010573,
        "Height": 423.63545297749329,
        "FontSize": 36.0,
        "InitialTop": 606.24566334358724,
        "InitialHeight": 446.30211964415992,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9279151ca01044f08132c5f1bb12b5ce",
        "Title": "Platform Width Calculation",
        "Nodes": [
          "af774d71e51647caae282fc088bf06bb",
          "3949bf9b3e7a4dcfb52c38c63d41f89c",
          "2122344a6c6c4f5e900634e71d62c5eb",
          "04530e04386248d3a3affe3762d7660b",
          "60a71154374945eeb0db2843f0f4b194",
          "31a13685283c42b9add86dd57ed46c95",
          "3c5c3fe74d5b41d4b4b801f168fe29d2",
          "d087c5b10db143da9f71e77163911823",
          "bd1b00af5a374ae78a3db17b3cc8d4f5",
          "5362827e790549c5b778bda177cd6bfd",
          "b2c1f69647394f44a916f5bcb14b7bff"
        ],
        "Left": -2156.4457673462548,
        "Top": -145.10521106310293,
        "Width": 1161.4607790347191,
        "Height": 691.57353852883546,
        "FontSize": 36.0,
        "InitialTop": -91.771877729769585,
        "InitialHeight": 714.24020519550209,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "46865fb535034401a428eba516d9e758",
        "Title": "Vertical Transportation",
        "Nodes": [
          "d5fd982584d446088314965fc077506a",
          "e15d5903d5f94bfabbbc763e0f037f08",
          "4ba388afdb6f4a199c2adaf4d7e4f99c",
          "072f17785abf4cc39dc5136a68b95710",
          "876097dbc23944c9b6110b8939af53c9",
          "2dc815a069a34ecd827e425ba9d48455",
          "5a57219466db46d29f2521ba7ebbc3fa",
          "767cbce34ce6427e9a7f619a0bb4f935",
          "93dd3d42c8c4464fb90f83360efc52de",
          "4afb43897b264e4bbb7f76c5701457a1",
          "859c366329bb4d16875a776dac8f000a"
        ],
        "Left": -2157.5216715124279,
        "Top": -959.515674119536,
        "Width": 861.357046357462,
        "Height": 791.45329286362085,
        "FontSize": 36.0,
        "InitialTop": -906.18234078620264,
        "InitialHeight": 710.7866261969541,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "da77c4c88ec74745aa6fdf867dfb0d3c",
        "Title": "Family Types",
        "Nodes": [
          "16ebeca796054d8f923afbaf528319bd",
          "d7a859123a084f57bf9f6c049349a8b5",
          "066869354e7b44b8a9563afcbb0780e0",
          "a546ad92001346f5bb198c55452494d8",
          "52c8935a887d4c54825856a370029332",
          "764f7e4dd112489fab080cb3a02a11f4",
          "a7e8c75ff74c43c1b3ffb9bbdb322529",
          "073e994e28f14c03b35614344fb596c3",
          "0bc8b8aefcb94b0f851e4c51d941ae82",
          "c227e785b58943edafa76525500a0bd7",
          "b72ecce27dbf4e2cb0eee76b03dc336d",
          "8cde6c34c459454e9004058a26f28e9c"
        ],
        "Left": -2155.2785271748571,
        "Top": 983.34937163414941,
        "Width": 809.31793367177579,
        "Height": 1102.3835803807742,
        "FontSize": 36.0,
        "InitialTop": 1036.6827049674828,
        "InitialHeight": 1099.7169137141075,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFC1D676"
      },
      {
        "Id": "727ae8ee733a448fa9ddc1195985340e",
        "Title": "Geometry Generation",
        "Nodes": [
          "5e46294564674e7d8151f3a2a1c328fa",
          "785587e89e0d4254851d66b8d1b81fc9",
          "7702ac28ad8c4ec2abf515aa060304b1"
        ],
        "Left": 986.33752731674963,
        "Top": 351.33818890353086,
        "Width": 781.16666666666674,
        "Height": 170.33333333333331,
        "FontSize": 48.0,
        "InitialTop": 418.67152223686418,
        "InitialHeight": 144.99999999999994,
        "TextblockHeight": 57.333333333333336,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "dffdb77cda0141f6b673dcd929d15b63",
        "Title": "crowd:it Parameters",
        "Nodes": [
          "c126dde365db4cc7a46bb27a6b30f6ff",
          "3e49a6e7984843bcaf9cd979a140f65d",
          "e345f84b7c264af9b6dab424ebebf9c2"
        ],
        "Left": -951.42002353540613,
        "Top": 402.85550739454442,
        "Width": 556.21060759384579,
        "Height": 192.1100901441535,
        "FontSize": 36.0,
        "InitialTop": 456.18884072787773,
        "InitialHeight": 214.77675681082019,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "253c8c06e9ea49349eaa55fedb521ccd",
        "Title": "Top Level Parameters",
        "Nodes": [
          "619194ee147a46bf869e3e6373ed406f",
          "5f4f339b8e3e4864bf9f6a99777f8b4c",
          "362a811f743d4f03a38ab35cc82d6377",
          "057219e7ac7943268312aa8bbe8cf431"
        ],
        "Left": -950.92718423221459,
        "Top": 115.85614847745413,
        "Width": 558.156981048647,
        "Height": 287.90783760224917,
        "FontSize": 36.0,
        "InitialTop": 169.18948181078747,
        "InitialHeight": 310.5745042689158,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "77c42fcea8eb46708ae1c9a95924ac33",
        "Title": "General Parameters",
        "Nodes": [
          "5a1fb6986487418a80057656a50ca8a1",
          "5549baa7f780455384ca099becc0b93e",
          "a23efd7c6d0f4301aaa00e4eba189874",
          "4b40e27ff785438dbe70b1ae9941cfd5",
          "1df9694bdc1e411ca2ac7e2131f07671",
          "d81e3a3ec50544a4a711c14418961e25",
          "1661a82a791d4ef8aefdd38dc65c9189"
        ],
        "Left": -1296.14571148733,
        "Top": -959.1965375233334,
        "Width": 716.30782809286086,
        "Height": 439.02140313358245,
        "FontSize": 36.0,
        "InitialTop": -905.86320419,
        "InitialHeight": 461.68806980024908,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "78eaee378bff487fb343ecf05f613002",
        "Title": "out of Order",
        "Nodes": [
          "5d9828480221475baf6e48bad2b42525"
        ],
        "Left": 168.5693132096759,
        "Top": 686.669795293129,
        "Width": 319.33333333333331,
        "Height": 100.33333333333337,
        "FontSize": 18.0,
        "InitialTop": 718.0031286264624,
        "InitialHeight": 145.0,
        "TextblockHeight": 21.333333333333332,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "13f8415c7a03455a99c23b87be7aba72",
        "Title": "Floor Plan Creation + Export",
        "Nodes": [
          "1c53288618d5449c8403f3964fb0e68f",
          "87e6d59395374d1186a9b34aa57f3548",
          "3b2c10c8a1524b479b5cd847680f0240",
          "03bf2edffdbd4ad18d85298e3ea57e68",
          "ff17db7c0a864e948289d7fedbef2c52",
          "30b6ec3bedbc4969a5d94292630a946b",
          "574f44dd54594825959be19fffcac4de",
          "96286062063d408db68bfe0c1d4dcd34",
          "53a3fa21b73d40d0bb3a902a1bd49c33",
          "bcd98c5768c34d419f03ff1b876ec7f4",
          "8babd6351e9a4db4a769cc4fc0d806d4",
          "422f2fbbd2a2461e94ae664c918e2b23",
          "7b90c8e74b004d8ca656aef26d3f8cfd",
          "63402c7670f742acb41b19fc3c0ad594",
          "190741c55ff54935a522ddcf25594936",
          "de5b48ea60e349d49fbefa11c9f00ed2",
          "6e93aa57406243c2b6f53041a8942466",
          "d09eb7be7c5e4b79bddbdd7f3912d1bb",
          "add6db02c20d4497b94e71129528fc96",
          "42fa0620dad04892beca9eb2a257c5c3"
        ],
        "Left": 2016.2277618827438,
        "Top": 353.64809494143833,
        "Width": 1076.8920965401671,
        "Height": 1118.5820202993934,
        "FontSize": 48.0,
        "InitialTop": 420.98142827477164,
        "InitialHeight": 1127.2486869660602,
        "TextblockHeight": 57.333333333333336,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "171600c950eb498f86176799e0444c26",
        "Title": "Preparation",
        "Nodes": [
          "91184f7c047c40aaa110ded98cf3e461",
          "b94ab649f1304a028e41b8d07f94707c",
          "b5296ebfad454f98b72cc564ba0e8214",
          "b946a6d5f8134cbd98d05f5965d1fa06",
          "263536cdede54434af2a2036eca4f9c8"
        ],
        "Left": -336.870142114209,
        "Top": -329.30937079917231,
        "Width": 1104.3042328934623,
        "Height": 891.6531516956552,
        "FontSize": 36.0,
        "InitialTop": -275.976037465839,
        "InitialHeight": 568.31981836232194,
        "TextblockHeight": 43.333333333333336,
        "Background": "#FFA4E1FF"
      }
    ],
    "X": -82.737949941049351,
    "Y": 77.5325082325116,
    "Zoom": 0.58888018686808663
  }
}